<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.passcombine.set.dao.SYDrwFileDAO">
	
	<!-- fnCheckPN -->
	<select id="fnCheckPN" parameterType="SYDrwFileInfoVo" resultType="int">
		SELECT COUNT(*) AS cnt 
		FROM drw_file_info
		WHERE item_code = #{item_code}
	</select>
	
	
	<select id="selectFileKey" resultType="String">
		SELECT fn_common_seq('file_group') AS file_group
	</select>
	
	<select id="selectDrwFile" parameterType="SYDrwFileInfoVo" resultType="SYDrwFileInfoVo">
		SELECT
			business_code, business_nm, item_code, item_nm,
			drw_no, drw_nm, file_group, file_no,
			file_rev_no, file_repo, file_cate, 
			cad_file_path, cad_file_name, cad_file_ext, cad_file_size,
			pdf_file_path, pdf_file_name, pdf_file_ext, pdf_file_size,
			file_final_yn, file_del_yn, file_comment, date_format(date_created, '%Y-%m-%d') as date_created,
			
			(
				SELECT member_nm 
				FROM sy_member_master
				WHERE member_id = d.updater
			) as creator
			
			
		FROM 
			drw_file_info as d
		
		WHERE 1 = 1

		    <if test="file_final_yn != null and '' != file_final_yn">
				AND file_final_yn = #{file_final_yn}
			</if>	
			<if test="file_del_yn != null and '' != file_del_yn">
				AND file_del_yn = #{file_del_yn}
			</if>	
			<if test="business_code != null and '' != business_code">
				AND business_code = #{business_code}
			</if>	
			<if test="item_nm != null and '' != item_nm">
				AND item_nm LIKE CONCAT('%', #{item_nm}, '%')
			</if>			
			<if test="item_code != null and '' != item_code">
				AND item_code LIKE CONCAT('%', #{item_code}, '%')
			</if>	
			<if test="drw_nm != null and '' != drw_nm">
				AND drw_nm = #{drw_nm}
			</if>	
			<if test="drw_no != null and '' != drw_no">
				AND drw_no = #{drw_no}
			</if>		
			<if test="file_rev_no != null and '' != file_rev_no">
				AND file_rev_no = #{file_rev_no}
			</if>
	</select>
			
	<insert id="insFileInfo" parameterType="SYDrwFileInfoVo">
		INSERT INTO drw_file_info
		(
			business_nm, item_code, item_nm,
			drw_no, drw_nm, file_group, file_no,
			file_rev_no, file_repo,
			
			cad_file_path, cad_file_name, cad_file_ext, cad_file_size,
			pdf_file_path, pdf_file_name, pdf_file_ext, pdf_file_size,
			
			file_comment,
			
			creator, updater, date_created, date_updated
			
			)
		VALUES(
			#{business_nm},
			#{item_code},		
			#{item_nm},
			#{drw_no},
			#{drw_nm},
			#{file_group},
			1,
			#{file_rev_no},
			#{file_repo},
		
			
			#{cad_file_path},
			#{cad_file_name},
			#{cad_file_ext},
			${cad_file_size},
			
			#{pdf_file_path},
			#{pdf_file_name},
			#{pdf_file_ext},
			${pdf_file_size},			
			
			#{file_comment},
			#{creator}, #{updater}, NOW(), NOW()
		)
	</insert>
	
	<insert id="insNewFileInfo" parameterType="SYDrwFileInfoVo">
		INSERT INTO drw_file_info
		(
			business_nm, item_code, item_nm,
			drw_no, drw_nm, file_group, file_no,
			file_rev_no, file_repo,
			
			cad_file_path, cad_file_name, cad_file_ext, cad_file_size,
			
			pdf_file_path, pdf_file_name, pdf_file_ext, pdf_file_size,
			
			file_comment,
			
			creator, updater, date_created, date_updated
			
			)
		VALUES(
				#{business_nm},
			
			#{item_code},		
			#{item_nm},
			#{drw_no},
			#{drw_nm},
			#{file_group},
			${file_no} + 1,
			#{file_new_rev_no},
			#{file_repo},

			#{cad_file_path},
			#{cad_file_name},
			#{cad_file_ext},
			${cad_file_size},
			
			#{pdf_file_path},
			#{pdf_file_name},
			#{pdf_file_ext},
			${pdf_file_size},			
			
			#{file_new_comment},
			#{creator}, #{updater}, NOW(), NOW()
		)
	</insert>
	
	<update id="updFileInfo" parameterType="SYDrwFileInfoVo">
		UPDATE drw_file_info
		SET
			<if test="business_code != null and '' != business_code">
				business_code = #{business_code},
			</if>
			<if test="business_nm != null and '' != business_nm">
				business_nm = #{business_nm},
			</if>
			<if test="item_code != null and '' != item_code">
				item_code = #{item_code},
			</if>
			<if test="item_nm != null and '' != item_nm">
				item_nm = #{item_nm},
			</if>
			<if test="drw_no != null and '' != drw_no">
				drw_no = #{drw_no},
			</if>
			<if test="drw_nm != null and '' != drw_nm">
				drw_nm = #{drw_nm},
			</if>
			<if test="file_rev_no != null and '' != file_rev_no">
				file_rev_no = #{file_new_rev_no},
			</if>
			<if test="file_comment != null and '' != file_comment">
				file_comment = #{file_new_comment},
			</if>
			<if test="file_final_yn != null and '' != file_final_yn">
				file_final_yn = #{file_final_yn},	
			</if>
			<if test="cad_file_name != null and '' != cad_file_name">
				cad_file_name = #{cad_file_name},
			</if>
			<if test="pdf_file_name != null and '' != pdf_file_name">
				pdf_file_name = #{pdf_file_name},
			</if>
			updater = #{updater} , date_updated = NOW()
			
		WHERE
			file_group = #{file_group}
			AND file_no = ${file_no}
			
	</update>
	
	<!-- <update id="delFileInfo" parameterType="Map">
		UPDATE drw_file_info
		SET
			file_del_yn = 'Y', updater = #{updater}, date_updated  = NOW()
		WHERE 
			<foreach collection="param" item="fileInfo" open=" (file_group, file_no) IN (" separator=" UNION " close=")">
				SELECT #{fileInfo.file_group}, #{fileInfo.file_no}
			</foreach>	
	</update> -->
	
	<delete id="delFileInfo" parameterType="Map">
		DELETE FROM drw_file_info
		WHERE 
			<foreach collection="param" item="fileInfo" open=" (file_group, file_no) IN (" separator=" UNION " close=")">
				SELECT #{fileInfo.file_group}, #{fileInfo.file_no}
			</foreach>	
	</delete>
	
</mapper>