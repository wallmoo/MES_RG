<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.passcombine.set.dao.SYWarehousingDAO">

	<select id="selectWarehouseRawLastSeq"  parameterType="SYWarehousingVo" resultType="String">
		SELECT MAX(division_seq*1) FROM warehouse_raw_tbl
			WHERE del_yn = 'N'
			<if test="serial_no != null and '' != serial_no">
				AND serial_no = #{serial_no}
			</if>	
			<if test="item_code != null and '' != item_code">
				AND item_code = #{item_code}
			</if>	
			<if test="warehouse_code != null and '' != warehouse_code">
				AND warehouse_code = #{warehouse_code}
			</if>
			<if test="out_warehousing_status != null and '' != out_warehousing_status">
				AND out_warehousing_status = #{out_warehousing_status}
			</if>		
	</select>
	<select id="selectLastDate"  parameterType="SYWarehousingVo" resultType="String">
		SELECT MAX(in_date) FROM warehousing_tbl
			WHERE warehousing_status = 'i'
			AND del_yn = 'N'
			<if test="purchase_order_num != null and '' != purchase_order_num">
				AND purchase_order_num = #{purchase_order_num}
			</if>	
			<if test="purchase_num != null and '' != purchase_num">
				AND purchase_num = #{purchase_num}
			</if>	
	</select>
	
	<select id="selectFileKey" resultType="String">
		SELECT fn_common_seq('file_group') AS file_group
	</select>
	
	<select id="selectWarehousing" parameterType="SYWarehousingVo" resultType="SYWarehousingVo">
		SELECT
			in_date_doc, warehousing_status, purchase_order_num, purchase_num, in_date, 
			item_code, item_nm, item_spec, item_type_code, item_type_nm,
			serial_no, meins, 
			
			(
				SELECT menge 
				FROM purchase_order_detail
				WHERE purchase_order_num = wt.purchase_order_num
				AND purchase_num = wt.purchase_num
			) as menge,
			
			
			in_menge, delivery_date,
			file_group, file_no, mill_sheet_no, 
			file_repo, file_cate, file_path, file_name, file_ext, file_size, 
			del_yn
	
		FROM 
			warehousing_tbl wt
		
		WHERE 1 = 1
		
		    AND warehousing_status = 'i'
		    AND del_yn = 'N'
		
			<if test="purchase_order_num != null and '' != purchase_order_num">
				AND purchase_order_num = #{purchase_order_num}
			</if>	
			<if test="purchase_num != null and '' != purchase_num">
				AND purchase_num = #{purchase_num}
			</if>	
			<if test="item_code != null and '' != item_code">
				AND item_code = #{item_code}
			</if>	
			<if test="item_nm != null and '' != item_nm">
				AND item_nm = #{item_nm}
			</if>	
			<if test="item_type_code != null and '' != item_type_code">
				AND item_type_code = #{item_type_code}
			</if>	
			
	</select>
	<insert id="insFileInfo" parameterType="SYWarehousingVo">
			INSERT INTO warehousing_tbl
			( 	
				in_date_doc, warehousing_status, purchase_order_num, purchase_num, in_date,
				item_code, item_nm, item_spec, item_type_code, item_type_nm,
				serial_no, meins, in_menge, delivery_date,
				file_group, file_no, mill_sheet_no, file_repo, 
			
				file_path, file_name, file_ext, file_size,
				del_yn, 
				creator, updater, date_created, date_updated 
			) 
			
			
			VALUES
			(
			 	
			 	fn_in_date_doc(),
				'i',
				#{purchase_order_num},
				#{purchase_num},
				date_format(#{in_date}, '%Y%m%d'),
				#{item_code}, 
				#{item_nm}, 
				#{item_spec}, 
				#{item_type_code},
				#{item_type_nm},
				
				#{serial_no}, 
	
				
				(
					SELECT meins
					FROM material_tbl
					WHERE item_code = #{item_code}
				)
				
				, 
				#{in_menge}, 
				#{delivery_date}, 
				
				#{file_group},
				1,
				#{mill_sheet_no}, 
				#{file_repo}, 
				
				#{file_path}, 
				#{file_name},
				#{file_ext},
				#{file_size}, 
				'N',
		
									
				
				
			 	#{creator}, #{updater}, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()
			)
	</insert>
	
	
	<insert id="insertWarehousing" parameterType="SYWarehousingVo">
			INSERT INTO warehousing_tbl
			( 	
				in_date_doc, in_type, warehousing_status, 
				<!-- purchase_order_num, purchase_num,  -->
				in_date, in_comment,
				item_code, item_nm, item_spec, item_type_code, item_type_nm,
				serial_no, meins, in_menge, delivery_date,
	
				del_yn, 
				creator, updater, date_created, date_updated 
			) 
			
			
			VALUES
			(
			 	
			 	fn_in_date_doc(),
			 	#{in_type},
				'i',
				<!-- #{purchase_order_num},
				#{purchase_num}, -->
				#{in_date},
				#{in_comment},
				#{item_code}, 
				#{item_nm}, 
				#{item_spec}, 
				#{item_type_code},
				#{item_type_nm},
				'', 
				(
					SELECT meins
					FROM material_tbl
					WHERE item_code = #{item_code}
				), 
				#{in_menge}, 
				#{delivery_date}, 

				'N',
	
			 	#{creator}, #{updater}, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()
			)
	</insert>
	
	<update id="modFileInfo" parameterType="SYWarehousingVo">
		UPDATE warehousing_tbl 
		SET serial_no = #{serial_no},
			mill_sheet_no = #{mill_sheet_no},
			<if test="file_name != null and '' != file_name">
			file_path = #{file_path},
			file_name = #{file_name},
			file_ext = #{file_ext},
			file_size = #{file_size} 
			</if>
		 WHERE in_date_doc = #{in_date_doc}
	
		

	</update>
	
	
	
	<update id="deleteWarehousing" parameterType="SYWarehousingVo">
		UPDATE warehousing_tbl SET warehousing_status = 'c'
		 WHERE in_date_doc = #{in_date_doc}
		<if test="purchase_order_num != null and !''.equals( purchase_order_num ) ">
			AND purchase_order_num = #{purchase_order_num}
		</if>
		<if test="purchase_num != null and !''.equals( purchase_num ) ">
			AND purchase_num = #{purchase_num}
		</if>
		<if test="serial_no != null and !''.equals( serial_no ) ">
			AND serial_no = #{serial_no}
		</if>
	</update>
	
	
	<update id="updatePurchaseOrder" parameterType="SYPurchaseOrderVo">
		UPDATE purchase_order_master
		SET  
			purchase_status = #{purchase_status}
	
		WHERE 1 = 1
		<if test="purchase_order_num != null and !''.equals( purchase_order_num ) ">
			AND purchase_order_num = #{purchase_order_num}
		</if>

	
	
	</update>
	<update id="updatePurchaseOrderDetail" parameterType="SYPurchaseOrderDetailVo">
		UPDATE purchase_order_detail
		SET  
		
			purchase_end_date = #{purchase_end_date},
			<if test="in_menge != null and !''.equals( in_menge ) ">
				in_menge = in_menge + ${in_menge}
			</if>
			<if test="purchase_status != null and !''.equals( purchase_status ) ">
				purchase_status = #{purchase_status}
			</if>
	
		WHERE 1 = 1
		<if test="purchase_order_num != null and !''.equals( purchase_order_num ) ">
			AND purchase_order_num = #{purchase_order_num}
		</if>
		<if test="purchase_num != null and !''.equals( purchase_num ) ">
			AND purchase_num = #{purchase_num}
		</if> 

	</update>
	
	<update id="updatePurchaseOrderDetail_minus" parameterType="SYPurchaseOrderDetailVo">
		UPDATE purchase_order_detail
		SET  
			
			purchase_end_date = #{purchase_end_date},

			<if test="in_menge != null and !''.equals( in_menge ) ">
				in_menge = in_menge - ${in_menge}
			</if>
			<if test="purchase_status != null and !''.equals( purchase_status ) ">
				purchase_status = #{purchase_status}
			</if>
	
		WHERE 1 = 1
		<if test="purchase_order_num != null and !''.equals( purchase_order_num ) ">
			AND purchase_order_num = #{purchase_order_num}
		</if>
		<if test="purchase_num != null and !''.equals( purchase_num ) ">
			AND purchase_num = #{purchase_num}
		</if> 

	</update>
	
	<select id="selectWarehouseRaw" parameterType="SYWareHouseRawVo" resultType="SYWareHouseRawVo">
		SELECT
			business_code, business_nm, warehouse_code, warehouse_nm, out_warehousing_status, 
			item_code, item_nm, item_spec, item_type_code, item_type_nm,
			serial_no, division_seq, meins,
			warehouse_raw_price, warehouse_raw_qty, warehouse_raw_change_qty, 
			
			IFNULL((
				SELECT IFNULL(safety_menge,0) 
				FROM material_tbl
				WHERE del_yn = 'N'
				AND item_code = item_code
				LIMIT 1
			),0)as safety_stock_qty,
			IFNULL(warehouse_raw_price,0) as warehousing_price,
			IFNULL(warehouse_raw_qty,0) as warehousing_qty,
			
			product_po, del_yn, 	
			creator, updater, date_created, date_updated 
	
		FROM 
			warehouse_raw_tbl wt
		
		WHERE 1 = 1
		
		    AND del_yn = 'N'
			<if test=" business_codeT == ''.toString() ">
				AND business_code = #{business_code}
			</if>
			<if test="business_codeT!=null and !''.equals(business_codeT) ">
				AND (business_code = #{business_code} OR business_code = #{business_codeT}) 
			</if>
			<if test="warehouse_code!=null and !''.equals(warehouse_code) ">
				AND warehouse_code = #{warehouse_code}
			</if>
			<if test="product_po != null and '' != product_po">
				AND product_po = #{product_po}
			</if>	
			<if test="warehouse_code != null and '' != warehouse_code">
				AND warehouse_code = #{warehouse_code}
			</if>	
			<if test="out_warehousing_status != null and '' != out_warehousing_status">
				AND out_warehousing_status = #{out_warehousing_status}
			</if>	
			<if test="item_code != null and '' != item_code">
				AND item_code = #{item_code}
			</if>	
			<if test="item_nm != null and '' != item_nm">
				AND item_nm = #{item_nm}
			</if>	
			<if test="item_type_code != null and '' != item_type_code">
				AND item_type_code = #{item_type_code}
			</if>	
			<if test="serial_no != null and '' != serial_no">
				AND serial_no = #{serial_no}
			</if>	
			
			
	</select>
	
	
	<!-- <select id="selectWarehouseRawPartition" parameterType="SYWareHouseRawVo" resultType="SYWareHouseRawVo">
		SELECT
		    business_code, business_nm, warehouse_code, warehouse_nm, out_warehousing_status, 
			item_code, item_nm, item_spec, item_type_code, item_type_nm,
			serial_no, division_seq, meins,
			warehouse_raw_price, warehouse_raw_qty, warehouse_raw_change_qty, 
			product_po, del_yn, 	
			(
				SELECT

				partition_rate
				FROM
					partition_master
				WHERE
					partition_code = 	(
												SELECT
								
												partition_code
												FROM
													partition_detail
												WHERE 1 = 1
													<if test="item_code != null and '' != item_code">
														AND item_code = #{item_code}
													</if>	
												AND del_yn = 'N'					
											)
				AND del_yn = 'N'
			
			) AS partition_rate ,
		
			creator, updater, date_created, date_updated 
	
		FROM 
			warehouse_raw_tbl wt
		
		WHERE 1 = 1
		
		    AND del_yn = 'N'
			<if test="product_po != null and '' != product_po">
				AND product_po = #{product_po}
			</if>	
			<if test="warehouse_code != null and '' != warehouse_code">
				AND warehouse_code = #{warehouse_code}
			</if>	
			<if test="out_warehousing_status != null and '' != out_warehousing_status">
				AND out_warehousing_status = #{out_warehousing_status}
			</if>	
			
			<if test="item_nm != null and '' != item_nm">
				AND item_nm = #{item_nm}
			</if>	
			<if test="serial_no != null and '' != serial_no">
				AND serial_no = #{serial_no}
			</if>	
			
			
	</select> -->
	<select id="selectWarehouseRawPartition" parameterType="SYWareHouseRawVo" resultType="SYWareHouseRawVo">
		SELECT
		    wt.business_code, wt.business_nm, wt.warehouse_code, wt.warehouse_nm, wt.out_warehousing_status, 
			wt.item_code, wt.item_nm, wt.item_spec, wt.item_type_code, wt.item_type_nm,
			wt.serial_no, wt.division_seq, wt.meins,
			wt.warehouse_raw_price, wt.warehouse_raw_qty, wt.warehouse_raw_change_qty, 
			wt.p_item_code, wt.product_po, wt.del_yn, 	
			(
				SELECT

				partition_rate
				FROM
					partition_master
				WHERE
					partition_code = p.partition_code
				AND del_yn = 'N'
			
			) AS partition_rate 
			,p.item_code as origin_item_code,
			ifnull((
				SELECT in_date
				FROM warehousing_tbl
				WHERE del_yn = 'N'
				AND item_code = wt.item_code
				AND serial_no = wt.serial_no

			
			),'') as in_date,
			
		
			wt.creator, wt.updater, wt.date_created, wt.date_updated 
	
		FROM 
			warehouse_raw_tbl as wt
		LEFT JOIN partition_detail as p
		ON wt.item_code = p.raw_item_code
		
		WHERE 1 = 1
			AND p.item_code = #{item_code}
		    AND wt.del_yn = 'N'
		    AND p.del_yn = 'N'
			<if test="product_po != null and '' != product_po">
				AND wt.product_po = #{product_po}
			</if>	
			<if test="warehouse_code != null and '' != warehouse_code">
				AND wt.warehouse_code = #{warehouse_code}
			</if>	
			<if test="out_warehousing_status != null and '' != out_warehousing_status">
				AND wt.out_warehousing_status = #{out_warehousing_status}
			</if>	
			
			<if test="item_nm != null and '' != item_nm">
				AND wt.item_nm = #{item_nm}
			</if>	
			<if test="serial_no != null and '' != serial_no">
				AND wt.serial_no = #{serial_no}
			</if>	
			
			
	</select>
	
	<insert id="insertWarehouseRaw" parameterType="SYWareHouseRawVo">
			INSERT INTO warehouse_raw_tbl
			( 	
				business_code, business_nm, warehouse_code, warehouse_nm,
				item_code, item_nm, item_spec, item_type_code, item_type_nm,
				serial_no, division_seq, meins, warehouse_raw_price, warehouse_raw_qty, warehouse_raw_change_qty,
				<if test="p_item_code != null and !''.equals( p_item_code ) ">
					p_item_code,
				</if>
				del_yn, 
				creator, updater, date_created, date_updated 
			) 
				
			VALUES
			(
			 	
			 	#{business_code},
			 	#{business_nm},
				#{warehouse_code},
			
				 (SELECT warehouse_nm FROM warehouse_master_header WHERE del_yn = 'N' AND warehouse_code = #{warehouse_code}),
				
				#{item_code}, 
				#{item_nm}, 
				#{item_spec}, 
				#{item_type_code},
				#{item_type_nm},
				
				#{serial_no}, 
				 #{division_seq},
				(
					SELECT meins
					FROM material_tbl
					WHERE item_code = #{item_code}
				)
				,
				(
					SELECT warehousing_price
					FROM material_tbl
					WHERE item_code = #{item_code}
				)
				, 
				#{warehouse_raw_qty},
				#{warehouse_raw_change_qty},  
				<if test="p_item_code != null and !''.equals( p_item_code ) ">
					#{p_item_code},  
				</if>
				'N',
			 	#{creator}, #{updater}, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()
			)
	</insert>
	
	<update id="deleteWarehouseRaw" parameterType="SYWareHouseRawVo">
		UPDATE warehouse_raw_tbl 
		SET del_yn = 'Y',	
<!-- 			<if test="product_po != null and !''.equals( product_po ) ">
			product_po = #{product_po},
			</if>		 -->
			updater = #{updater},	
			date_updated = current_timestamp()
		 WHERE serial_no = #{serial_no}
		 	AND del_yn = 'N'
<!-- 		<if test="product_po != null and !''.equals( product_po ) ">
			AND product_po = #{product_po}
		</if> -->
		<if test="division_seq != null and !''.equals( division_seq ) ">
			AND division_seq = #{division_seq}
		</if>
		<if test="item_code != null and !''.equals( item_code ) ">
			AND item_code = #{item_code}
		</if>
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND item_nm = #{item_nm}
		</if>
	</update>
	
	
	<update id="updateWarehouseRawStatus" parameterType="SYWareHouseRawVo">
		UPDATE warehouse_raw_tbl 
		SET out_warehousing_status = 'o',
			product_po =  #{product_po},	
			updater = #{updater},	
			date_updated = current_timestamp()
		 WHERE del_yn = 'N'
		
		<if test="item_code != null and !''.equals( item_code ) ">
			AND item_code = #{item_code}
		</if>
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND item_nm = #{item_nm}
		</if>
		<if test="serial_no != null and !''.equals( serial_no ) ">
			AND serial_no = #{serial_no}
		</if>
		<if test="division_seq != null and !''.equals( division_seq ) ">
			AND division_seq = #{division_seq}
		</if>
	</update>
	
	<update id="updateWarehouseRawFile" parameterType="SYWareHouseRawVo">
		UPDATE warehouse_raw_tbl 
		SET serial_no = #{serial_no},
			updater = #{updater},	
			date_updated = current_timestamp()
		 WHERE del_yn = 'N'
		
		<if test="item_code != null and !''.equals( item_code ) ">
			AND item_code = #{item_code}
		</if>

		<if test="current_serial_no != null and !''.equals( current_serial_no ) ">
			AND serial_no = #{current_serial_no}
		</if>

	</update>
	
	<update id="updateProductRawStatus" parameterType="SYProductVO">
		UPDATE product_tbl SET  
			raw_out_yn = 'Y',
			updater = #{updater},	
			date_updated = current_timestamp()
		 WHERE product_po = #{product_po}
		 	<if test="item_code != null and !''.equals( item_code ) ">
				AND item_code = #{item_code}
			</if>
			<if test="item_nm != null and !''.equals( item_nm ) ">
				AND item_nm = #{item_nm}
			</if>
	</update>
	
	
	
	
	<select id="selectPurchaseOrder" parameterType="SYPurchaseOrderVo" resultType="SYPurchaseOrderVo">
		SELECT 
			om.account_code, om.account_nm, 
			od.purchase_order_num, od.purchase_num, om.purchase_date, od.purchase_req_date, od.purchase_end_date, od.purchase_status,
			od.item_code, od.item_nm, od.item_spec, od.item_type_code, od.item_type_nm,
			od.unit_price, ifnull(od.menge,0) as menge, ifnull(od.in_menge,0) as in_menge, od.total_price, od.del_yn,
			
			(
				SELECT 
					safety_menge
				FROM material_tbl
				WHERE del_yn = 'N'
				AND safety_stock_yn = 'Y'
				AND item_code = od.item_code
				
			) as safety_menge,
			
			(
				SELECT
					warehousing_qty
				FROM warehouse_tbl
				WHERE del_yn = 'N'
				AND item_code = od.item_code
			) as warehousing_qty,
			
			od.creator, od.updater, od.date_created, od.date_updated
		FROM purchase_order_detail AS od
		
		LEFT JOIN purchase_order_master om
		ON od.purchase_order_num= om.purchase_order_num
		
		WHERE 1 = 1
		AND od.del_yn = 'N'
		
		<if test="account_nm != null and !''.equals( account_nm ) ">
			AND om.account_nm = #{account_nm}
		</if>
		
		<if test="purchase_order_num != null and !''.equals( purchase_order_num ) ">
			AND od.purchase_order_num = #{purchase_order_num}
		</if>
		<if test="purchase_num != null and !''.equals( purchase_num ) ">
			AND od.purchase_num = #{purchase_num}
		</if>
		
		<if test="purchase_req_date != null and !''.equals( purchase_req_date ) ">
			AND date_format(od.purchase_req_date, '%Y%m%d') BETWEEN left(#{purchase_req_date}, 8) AND right(#{purchase_req_date}, 8)
		</if>
		
		<if test="item_type_code != null and !''.equals( item_type_code ) ">
			AND od.item_type_code = #{item_type_code}
		</if>
		
		<if test="item_code != null and !''.equals( item_code ) ">
			AND od.item_code = #{item_code}
		</if>
		
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND od.item_nm = #{item_nm}
		</if>
		<if test="purchase_status != null and !''.equals( purchase_status ) ">
			AND od.purchase_status = #{purchase_status}
		</if>

		ORDER BY od.purchase_order_num, od.purchase_req_date, od.date_created ASC
	</select>
	
	
	<select id="selectPurchaseOrderDetail" parameterType="SYPurchaseOrderDetailVo" resultType="SYPurchaseOrderDetailVo">
		SELECT 
			om.account_code, om.account_nm, 
			od.purchase_order_num, od.purchase_num, om.purchase_date, od.purchase_req_date, od.purchase_end_date, od.purchase_status,
			od.item_code, od.item_nm, od.item_spec, od.item_type_code, od.item_type_nm,
			od.unit_price, ifnull(od.menge,0) as menge, ifnull(od.in_menge,0) as in_menge, od.total_price, od.del_yn,
			
			(
				SELECT 
					safety_menge
				FROM material_tbl
				WHERE del_yn = 'N'
				AND safety_stock_yn = 'Y'
				AND item_code = od.item_code
				
			) as safety_menge,
			
			(
				SELECT
					SUM(warehousing_qty) as warehousing_qty
				FROM warehouse_tbl
				WHERE del_yn = 'N'
				AND item_code = od.item_code
				GROUP BY item_code
			) as warehousing_qty,
			
			od.creator, od.updater, od.date_created, od.date_updated
		FROM purchase_order_detail AS od
		
		LEFT JOIN purchase_order_master om
		ON od.purchase_order_num= om.purchase_order_num
		
		WHERE 1 = 1
		AND od.del_yn = 'N'
		
		<if test="account_nm != null and !''.equals( account_nm ) ">
			AND om.account_nm = #{account_nm}
		</if>
		
		<if test="purchase_order_num != null and !''.equals( purchase_order_num ) ">
			AND od.purchase_order_num = #{purchase_order_num}
		</if>
		<if test="purchase_num != null and !''.equals( purchase_num ) ">
			AND od.purchase_num = #{purchase_num}
		</if>
		
		<if test="purchase_req_date != null and !''.equals( purchase_req_date ) ">
			AND date_format(od.purchase_req_date, '%Y%m%d') BETWEEN left(#{purchase_req_date}, 8) AND right(#{purchase_req_date}, 8)
		</if>
		
		<if test="item_type_code != null and !''.equals( item_type_code ) ">
			AND od.item_type_code = #{item_type_code}
		</if>
		
		<if test="item_code != null and !''.equals( item_code ) ">
			AND od.item_code = #{item_code}
		</if>
		
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND od.item_nm = #{item_nm}
		</if>
		<if test="purchase_status != null and !''.equals( purchase_status ) ">
			AND od.purchase_status = #{purchase_status}
		</if>

		ORDER BY od.purchase_order_num, od.purchase_req_date, od.date_created ASC
	</select>
	
	
	<insert id="insertWarehouse" parameterType="SYWarehouseVo">
			INSERT INTO warehouse_tbl
			( 	
				business_code, business_nm, warehouse_code, warehouse_nm,
				item_code, item_nm, item_spec, item_type_code, item_type_nm,

				meins, warehousing_price, warehousing_qty, 

				del_yn, 
				creator, updater, date_created, date_updated 
			) 
				
			VALUES
			(
			 	
			 	#{business_code},
			 	#{business_nm},
				#{warehouse_code},
				#{warehouse_nm},
				
				#{item_code}, 
				#{item_nm}, 
				#{item_spec}, 
				#{item_type_code},
				#{item_type_nm},
				(
					SELECT meins
					FROM material_tbl
					WHERE item_code = #{item_code}
				)
				,
				(
					SELECT warehousing_price
					FROM material_tbl
					WHERE item_code = #{item_code}
				)
				, 
				#{warehousing_qty},
				'N',
			 	#{creator}, #{updater}, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()
			)
	</insert>
	<insert id="saveWarehouse" parameterType="SYWarehouseVo">
 		INSERT INTO warehouse_tbl (
				business_code, business_nm, warehouse_code, warehouse_nm,
				item_code, item_nm, item_spec, item_type_code, item_type_nm,

		    	meins, warehousing_price, warehousing_qty, 

				del_yn, 
				creator, updater, date_created, date_updated )
		SELECT *
		  FROM (
		  		SELECT  
		 
				#{business_code} as business_code, #{business_nm} as business_nm,  
				#{warehouse_code} as warehouse_code, 
				 (SELECT warehouse_nm FROM warehouse_master_header WHERE del_yn = 'N' AND warehouse_code = #{warehouse_code}) as warehouse_nm, 
		  		#{item_code} as item_code, #{item_nm} as item_nm, #{item_spec} as item_spec, 
		  		#{item_type_code} as item_type_code, #{item_type_nm} as item_type_nm, 
		  		(
					SELECT meins
					FROM material_tbl
					WHERE item_code = #{item_code}
				) as meins, 
				(
					SELECT warehousing_price
					FROM material_tbl
					WHERE item_code = #{item_code}
				) as warehousing_price, 
				#{warehousing_qty} as warehousing_qty,  
		  		'N' as del_yn,
				#{creator} as creator, #{updater} as updater, current_timestamp() as date_created, current_timestamp() as date_updated
		  ) s
		  ON DUPLICATE KEY
		UPDATE
			business_code = s.business_code,
			business_nm = s.business_nm,
			warehouse_code = s.warehouse_code,
			warehouse_nm = s.warehouse_nm,
										
			item_code = s.item_code,
			item_nm = s.item_nm,
			item_spec = s.item_spec,
			item_type_code = s.item_type_code,
			item_type_nm = s.item_type_nm,
			
			meins = s.meins,
			warehousing_price = s.warehousing_price,
		
			<if test="warehousing_qty != null and !''.equals( warehousing_qty ) ">
				warehousing_qty = s.warehousing_qty + ${warehousing_qty},
			</if>
			
			del_yn = s.del_yn,
					
			updater = s.updater,
			date_updated = s.date_updated
	</insert>
	<update id="deleteWarehouse" parameterType="SYWarehouseVo">
		UPDATE warehouse_tbl 
		SET del_yn = 'Y',	
<!-- 			<if test="product_po != null and !''.equals( product_po ) ">
			product_po = #{product_po},
			</if>		 -->
			updater = #{updater},	
			date_updated = current_timestamp()
<!-- 		<if test="product_po != null and !''.equals( product_po ) ">
			AND product_po = #{product_po}
		</if> -->
		WHERE 1= 1
		<if test="item_code != null and !''.equals( item_code ) ">
			AND item_code = #{item_code}
		</if>
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND item_nm = #{item_nm}
		</if>
	</update>
	
	<update id="plusWarehouse" parameterType="SYWarehouseVo">
		UPDATE warehouse_tbl 
		SET 
		    <if test="warehousing_qty != null and !''.equals( warehousing_qty ) ">
				warehousing_qty = warehousing_qty + ${warehousing_qty},
			</if>
			updater = #{updater},	
			date_updated = current_timestamp()
<!-- 		<if test="product_po != null and !''.equals( product_po ) ">
			AND product_po = #{product_po}
		</if> -->
		WHERE 1 = 1
		<if test="item_code != null and !''.equals( item_code ) ">
			AND item_code = #{item_code}
		</if>
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND item_nm = #{item_nm}
		</if>
	</update>
	
	<update id="minusWarehouse" parameterType="SYWarehouseVo">
		UPDATE warehouse_tbl 
		SET 
		    <if test="warehousing_qty != null and !''.equals( warehousing_qty ) ">
				warehousing_qty = warehousing_qty - ${warehousing_qty},
			</if>
			updater = #{updater},	
			date_updated = current_timestamp()
<!-- 		<if test="product_po != null and !''.equals( product_po ) ">
			AND product_po = #{product_po}
		</if> -->
		WHERE 1 = 1
		<if test="item_code != null and !''.equals( item_code ) ">
			AND item_code = #{item_code}
		</if>
		<if test="item_nm != null and !''.equals( item_nm ) ">
			AND item_nm = #{item_nm}
		</if>
	</update>
	
	
	
	
	
	
	
	
	
	
	
	<!-- 원자재 재고 관리 (입고) -->
	
	<select id="selectWarehousingMng" parameterType="SYWarehousingVo" resultType="SYWarehousingVo">
		SELECT
			in_date_doc, warehousing_status, purchase_order_num, purchase_num, in_date, 
			item_code, item_nm, item_spec, item_type_code, item_type_nm,
			serial_no, meins, 
			
			(
				SELECT warehousing_price
				FROM material_tbl
				WHERE del_yn = 'N'
				AND item_code = wt.item_code
			
			) as warehousing_price,
			
				
			SUM(in_menge) as original_cnt, 
			delivery_date,
			file_group, file_no, mill_sheet_no, 
			file_repo, file_cate, file_path, file_name, file_ext, file_size, 
			del_yn
	
		FROM 
			warehousing_tbl wt
		
		WHERE 1 = 1
		
		    AND del_yn = 'N'
			<if test="warehousing_status != null and '' != warehousing_status">
				AND warehousing_status = #{warehousing_status}
			</if>	
			<if test="purchase_order_num != null and '' != purchase_order_num">
				AND purchase_order_num = #{purchase_order_num}
			</if>	
			<if test="purchase_num != null and '' != purchase_num">
				AND purchase_num = #{purchase_num}
			</if>	
			<if test="item_code != null and '' != item_code">
				AND item_code = #{item_code}
			</if>	
			<if test="item_nm != null and '' != item_nm">
				AND item_nm = #{item_nm}
			</if>	
			<if test="item_type_code != null and '' != item_type_code">
				AND item_type_code = #{item_type_code}
			</if>	
			
			GROUP BY item_code, mill_sheet_no
			
	</select>
	
	
	<!-- 원자재 재고 관리 (출고) -->
	
	<select id="selectWarehouseRawMng" parameterType="SYWareHouseRawVo" resultType="SYWareHouseRawVo">
		SELECT
			business_code, business_nm, warehouse_code, warehouse_nm, out_warehousing_status, 
			item_code, item_nm, item_spec, item_type_code, item_type_nm,
			serial_no, division_seq, meins,
			warehouse_raw_price, 
			warehouse_raw_price as warehousing_price,
			warehouse_raw_qty as original_cnt, 
			warehouse_raw_change_qty, 
			product_po, del_yn, 	
			creator, updater, date_created, date_updated 
	
		FROM 
			warehouse_raw_tbl wt
		
		WHERE 1 = 1
		
		    AND del_yn = 'N'
		
	
			<if test="warehouse_code != null and '' != warehouse_code">
				AND warehouse_code = #{warehouse_code}
			</if>	
			<if test="out_warehousing_status != null and '' != out_warehousing_status">
				AND out_warehousing_status = #{out_warehousing_status}
			</if>	
			<if test="item_code != null and '' != item_code">
				AND item_code = #{item_code}
			</if>	
			<if test="item_nm != null and '' != item_nm">
				AND item_nm = #{item_nm}
			</if>	
			<if test="product_po != null and '' != product_po">
				AND product_po = #{product_po}
			</if>	
			<if test="item_type_code != null and '' != item_type_code">
				AND item_type_code = #{item_type_code}
			</if>	
			<if test="serial_no != null and '' != serial_no">
				AND serial_no = #{serial_no}
			</if>	
			
			
	</select>
	
	<!-- selectWarehouse -->
	<select id="selectWarehouseOut" parameterType="SYWarehouseOutVo" resultType="SYWarehouseOutVo">
		SELECT 
			out_date_doc,
			business_code, business_nm, 
			warehouse_code, warehouse_nm, 
			out_warehousing_status,
			date_format(out_date, '%Y-%m-%d') as out_date,
			out_user,
			out_comment as comment,
			item_code, item_nm, item_spec, 
			item_type_code, item_type_nm, 
			meins, 
			ifnull(
			warehousing_price,0) as warehousing_price , 
			 ifnull((
				SELECT ifnull(safety_menge,0)
				FROM material_tbl
				WHERE del_yn = 'N'
				AND item_code = w.item_code

			),0) as safety_menge,
			 ifnull(warehousing_qty,0) as warehousing_qty, 
			 product_po,
			del_yn, 
			creator, updater, date_created, date_updated
		FROM warehouse_out_tbl as w
		WHERE del_yn = 'N'
		<!-- <if test="business_code!=null and !''.equals(business_code) ">
			AND business_code = #{business_code}
		</if> -->
		<if test=" business_codeT == ''.toString() ">
			AND business_code = #{business_code}
		</if>
		<if test="business_codeT!=null and !''.equals(business_codeT) ">
			AND (business_code = #{business_code} OR business_code = #{business_codeT}) 
		</if>
		<if test="warehouse_code!=null and !''.equals(warehouse_code) ">
			AND warehouse_code = #{warehouse_code}
		</if>
		<if test="item_code!=null and !''.equals(item_code) ">
			AND item_code = #{item_code}
		</if>
		<if test="item_nm!=null and !''.equals(item_nm) ">
			AND item_nm LIKE CONCAT('%', #{item_nm}, '%')
		</if>
			AND item_type_code != 'MD1245'
		<if test="item_type_code != null and '' != item_type_code">
 			AND item_type_code = #{item_type_code}
 
 		</if>
 		<if test="product_po != null and '' != product_po">
 			AND product_po = #{product_po}
 
 		</if>
 		<if test="out_date != null and !''.equals( out_date ) ">
			AND date_format(out_date, '%Y%m%d') BETWEEN left(#{out_date}, 8) AND right(#{out_date}, 8)
		</if>
		<!-- ORDER BY date_format(out_date, '%Y-%m-%d') , date_created DESC -->
		ORDER BY  out_date DESC, item_type_nm, item_code asc
	
	</select>
	
	
	
	<select id="selectWarehousingMngEtc" parameterType="SYWarehousingVo" resultType="SYWarehousingVo">
		SELECT
			in_date_doc, warehousing_status, purchase_order_num, purchase_num, DATE_FORMAT(in_date,'%Y-%m-%d') as in_date, 
			in_comment as comment,
			item_code, item_nm, item_spec, item_type_code, item_type_nm,
			serial_no, meins, 
			
			(
				SELECT menge 
				FROM purchase_order_detail
				WHERE purchase_order_num = wt.purchase_order_num
				AND purchase_num = wt.purchase_num
			) as menge,
			
			
			ifnull(in_menge,0) as warehousing_qty, 
			
			(
               SELECT unit_price FROM purchase_order_detail
               WHERE del_yn = 'N'
               AND purchase_order_num = wt.purchase_order_num
               AND purchase_num = wt.purchase_num
            ) as warehousing_price,
			
			
			
			delivery_date,
			file_group, file_no, mill_sheet_no, 
			file_repo, file_cate, file_path, file_name, file_ext, file_size, 
			del_yn
	
		FROM 
			warehousing_tbl wt
		
		WHERE 1 = 1
		
		    AND warehousing_status = 'i'
		    AND del_yn = 'N'
		
		
			<if test="item_code != null and '' != item_code">
				AND item_code = #{item_code}
			</if>	
			<if test="item_nm != null and '' != item_nm">
				AND item_nm = #{item_nm}
			</if>	
					AND item_type_code != 'MD1245'
			<if test="item_type_code != null and '' != item_type_code">
				AND item_type_code = #{item_type_code}
		
			</if>	
			
			<if test="in_date != null and !''.equals( in_date ) ">
				AND date_format(in_date, '%Y%m%d') BETWEEN left(#{in_date}, 8) AND right(#{in_date}, 8)
			</if>
			
		<!-- ORDER BY date_format(in_date, '%Y-%m-%d') , date_created DESC -->
		ORDER BY  date_created DESC
			
	</select>
	
	
	<select id="selectWarehouseHis" parameterType="SYWarehousingVo" resultType="SYWarehousingVo">
		
		SELECT    
      
         in_status, out_status, warehousing_status, date, item_code, item_nm, meins,
         item_type_code, item_type_nm, 
         warehousing_qty,
         in_qty, out_qty,
         
         
         IFNULL(( SELECT
          SUM(IFNULL(in_menge,0)) AS in_menge   
         FROM warehousing_tbl wt   
         WHERE 1 = 1
         
         AND warehousing_status = 'i'
         AND del_yn = 'N'
         AND item_type_code != 'MD1245'
 
         AND date_format(in_date,'%Y%m%d') <![CDATA[ < ]]> DATE_FORMAT(left(#{date}, 8),'%Y%m%d')
         AND item_code = pp.item_code
         GROUP BY item_code),0) 
         - 
         IFNULL((      SELECT 
         SUM(IFNULL(warehousing_qty,0)) AS out_menge

         FROM warehouse_out_tbl as w
         WHERE del_yn = 'N'
         AND item_type_code != 'MD1245'
         AND date_format(out_date,'%Y%m%d') <![CDATA[ < ]]> DATE_FORMAT(left(#{date}, 8),'%Y%m%d')
         AND item_code = pp.item_code
         GROUP BY item_code ),0) AS warehouse_qty,
         
         warehousing_price, 
         account_nm,
         comment, date_created
      
      FROM 
         (
         SELECT
            '입고' as in_status,
            '' as out_status,
            warehousing_status,
            DATE_FORMAT(in_date,'%Y-%m-%d') as date, 
            item_code, item_nm, meins, 
            item_type_code, item_type_nm, 
            ifnull(in_menge,0) as warehousing_qty, 
            ifnull(in_menge,0) as in_qty, 
            '' as out_qty, 
            (
               SELECT unit_price FROM purchase_order_detail
               WHERE del_yn = 'N'
               AND purchase_order_num = wt.purchase_order_num
               AND purchase_num = wt.purchase_num
            ) as warehousing_price,
            (
               SELECT account_nm FROM purchase_order_master
               WHERE del_yn = 'N'
               AND purchase_order_num = wt.purchase_order_num
               LIMIT 1
            ) as account_nm,
            in_comment as comment,
            date_created
            
         FROM 
            warehousing_tbl wt   
         WHERE 1 = 1
         
         AND warehousing_status = 'i'
         AND del_yn = 'N'
         AND item_type_code != 'MD1245'
                
      UNION ALL
                
         SELECT 
            '' as in_status,
            '출고' as out_status,
            out_warehousing_status,
            date_format(out_date, '%Y-%m-%d') as date,
            item_code, item_nm, meins, 
            item_type_code, item_type_nm, 
            ifnull(warehousing_qty,0) as warehousing_qty,
               '' as in_qty, 
            ifnull(warehousing_qty,0) as out_qty,
            ifnull(warehousing_price,0) as warehousing_price,
            (
            	SELECT customer_nm 
            	FROM order_manager_tbl
            	WHERE order_num = (SELECT order_num 
									FROM product_tbl
             						WHERE del_yn = 'N'
              						AND product_po = w.product_po
									LIMIT 1 )
				AND item_code = w.item_code
		
            ) AS customer_nm,
            out_comment as comment,
            date_created 
         FROM warehouse_out_tbl as w
         WHERE del_yn = 'N'
         AND item_type_code != 'MD1245'
         
      ) AS pp
      
      WHERE 1 = 1 
      
		
		<if test="warehousing_status != null and '' != warehousing_status">
			AND warehousing_status = #{warehousing_status}
		</if>
		<if test="item_code != null and '' != item_code">
			AND item_code = #{item_code}
		</if>	
		<if test="item_nm != null and '' != item_nm">
			AND item_nm = #{item_nm}
		</if>	
		<if test="item_type_code != null and '' != item_type_code">
			AND item_type_code = #{item_type_code}
		</if>	
		
		<if test="date != null and !''.equals( date ) ">
			AND date_format(date, '%Y%m%d') BETWEEN left(#{date}, 8) AND right(#{date}, 8)
		</if>
			
		<!-- ORDER BY date_format(in_date, '%Y-%m-%d') , date_created DESC -->
		ORDER BY  DATE, date_created ASC
			
	</select>
	
	<insert id="saveWarehouseOut" parameterType="SYWarehouseOutVo">
			INSERT INTO warehouse_out_tbl
			( 	
				out_date_doc,
				business_code, business_nm, warehouse_code, warehouse_nm,
				out_warehousing_status,
				out_date, out_user, out_comment,
				item_code, item_nm, item_spec, item_type_code, item_type_nm,

				meins, warehousing_price, warehousing_qty, 
				<if test="product_po != null and !''.equals( product_po ) ">
					product_po,
				</if>
				del_yn, 
				creator, updater, date_created, date_updated 
			) 
				
			VALUES
			(
			 	
			 	fn_out_date_doc(),
			 	#{business_code},
			 	#{business_nm},
				#{warehouse_code},
				#{warehouse_nm},
				
				'o',
				#{out_date},
				#{out_user},
				#{out_comment},
				
				#{item_code}, 
				#{item_nm}, 
				#{item_spec}, 
				#{item_type_code},
				#{item_type_nm},
				#{meins},
				#{warehousing_price},
				#{warehousing_qty},
				<if test="product_po != null and !''.equals( product_po ) ">
					#{product_po},
				</if>
				'N',
			 	#{creator}, #{updater}, CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()
			)
	</insert>
</mapper>