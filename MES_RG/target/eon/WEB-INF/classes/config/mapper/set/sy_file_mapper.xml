<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.passcombine.set.dao.SYFileDAO">
	
	<select id="selectFileKey" resultType="String">
SELECT fn_common_seq('file_group') AS file_group
	</select>
	
	<select id="selectFile_nopage" parameterType="SYFileVo" resultType="SYFileVo">
		SELECT file_group, file_no, file_repo, file_cate, file_path, file_name
		  , file_ext, ifnull(file_size, 0) as file_size, file_del_yn, file_thumnail
		  , date_created, date_format(a.date_updated, '%Y.%m.%d') as date_updated 
			, creator, updater
		<!-- 	, fn_member_nm(updater) as updater_nm  -->
		FROM sy_file_info a
		WHERE 1=1
		<if test="file_group != null and !''.equals(file_group) ">
			AND file_group = #{file_group}
		</if>
		<if test="file_no != null and !''.equals(file_no) ">
			AND file_no = #{file_no}
		</if>
		<if test="file_name != null and !''.equals(file_name) ">
			AND SUBSTRING_INDEX(file_name, '.', 1) = SUBSTRING_INDEX(#{file_name}, '.', 1)
	<!-- 		AND file_name LIKE concat('%', #{file_name}, '%') -->
		</if>
		<if test="file_cate != null and !''.equals(file_cate) ">
			AND file_cate = #{file_cate}
		</if>
		<if test="file_ext != null and !''.equals(file_ext) ">
			AND file_ext = #{file_ext}
		</if>
		<if test="file_del_yn != null and !''.equals(file_del_yn) ">
			AND file_del_yn = #{file_del_yn}
		</if>
		<if test="matnr != null and !''.equals(matnr) ">
			AND SUBSTRING_INDEX(file_name, '.', 1) = (select SUBSTRING_INDEX(file_name, '.', 1) from sy_file_work_std where matnr = #{matnr} and file_del_yn = 'N')
		</if>
		ORDER BY file_no
	</select>
	
	<select id="selectFile" parameterType="SYFileVo" resultType="SYFileVo">
		SELECT file_group, file_no, file_repo, file_cate, file_path, file_name
		  , file_ext, ifnull(file_size, 0) as file_size, file_del_yn, file_thumnail
		  , date_created, date_format(a.date_updated, '%Y.%m.%d') as date_updated 
			, creator, updater
		<!-- 	, fn_member_nm(updater) as updater_nm  -->
		FROM sy_file_info a
		WHERE 1=1
		<if test="file_group != null and !''.equals(file_group) ">
			AND file_group = #{file_group}
		</if>
		<if test="file_no != null and !''.equals(file_no) ">
			AND file_no = #{file_no}
		</if>
		<if test="file_name != null and !''.equals(file_name) ">
			AND SUBSTRING_INDEX(file_name, '.', 1) = SUBSTRING_INDEX(#{file_name}, '.', 1)
	<!-- 		AND file_name LIKE concat('%', #{file_name}, '%') -->
		</if>
		<if test="file_nm != null and !''.equals(file_nm) ">
			AND file_name LIKE concat('%', #{file_nm}, '%')
		</if>
		<if test="file_cate != null and !''.equals(file_cate) ">
			AND file_cate = #{file_cate}
		</if>
		<if test="file_ext != null and !''.equals(file_ext) ">
			AND file_ext = #{file_ext}
		</if>
		<if test="creator != null and !''.equals(creator) ">
			AND creator = #{creator}
		</if>
		<if test="file_del_yn != null and !''.equals(file_del_yn) ">
			AND file_del_yn = #{file_del_yn}
		</if>
		<if test="sidx != null and !sidx.equals('')">
			order by ${sidx} ${sord}      
		</if>
		<if test="page != null and !page.equals('')">
			limit #{page}, #{rows}
		</if> 
<!-- 		ORDER BY file_no -->
	</select>
	
	<select id="selectFile_count" parameterType="SYFileVo" resultType="int">
		SELECT count(*)
		FROM sy_file_info a
		WHERE 1=1
		<if test="file_group != null and !''.equals(file_group) ">
			AND file_group = #{file_group}
		</if>
		<if test="file_no != null and !''.equals(file_no) ">
			AND file_no = #{file_no}
		</if>
		<if test="file_name != null and !''.equals(file_name) ">
			AND SUBSTRING_INDEX(file_name, '.', 1) = SUBSTRING_INDEX(#{file_name}, '.', 1)
		</if>
		<if test="file_cate != null and !''.equals(file_cate) ">
			AND file_cate = #{file_cate}
		</if>
		<if test="file_ext != null and !''.equals(file_ext) ">
			AND file_ext = #{file_ext}
		</if>
		<if test="file_del_yn != null and !''.equals(file_del_yn) ">
			AND file_del_yn = #{file_del_yn}
		</if>
<!-- 			ORDER BY file_no -->
	</select>
	
	<select id="selectFileDetail" parameterType="SYFileVo" resultType="SYFileVo">
SELECT file_group, file_no, file_repo, file_cate, file_path, file_name
  , file_ext, ifnull(file_size, 0) as file_size, file_del_yn, file_thumnail
  , date_created, date_format(a.date_updated, '%Y.%m.%d') as date_updated 
	, creator, updater
<!-- 	, fn_member_nm(updater) as updater_nm -->
FROM sy_file_info a
WHERE 1=1
	<if test="file_group != null and !''.equals(file_group) ">
		AND file_group = #{file_group}
	</if>
	<if test="file_no != null and !''.equals(file_no) ">
		AND file_no = #{file_no}
	</if>
	<if test="file_name != null and !''.equals(file_name) ">
		AND file_name LIKE concat('%', #{file_name}, '%')
	</if>
	<if test="file_cate != null and !''.equals(file_cate) ">
		AND file_cate = #{file_cate}
	</if>
	<if test="file_ext != null and !''.equals(file_ext) ">
		AND file_ext = #{file_ext}
	</if>
	<if test="file_del_yn != null and !''.equals(file_del_yn) ">
		AND file_del_yn = #{file_del_yn}
	</if>
LIMIT 0, 1
	</select>
	
	<insert id="insertFile" parameterType="SYFileVo">
INSERT INTO sy_file_info (
  file_group, file_no, file_repo, file_cate, file_path, file_name
  , file_ext, file_size, file_del_yn, file_thumnail
  , date_created, date_updated, creator, updater
) VALUES (
	#{file_group}
	, CASE
			WHEN ifnull(#{file_group}, '') = ''  THEN 1 
			ELSE ifnull((SELECT MAX(file_no)+1 FROM sy_file_info x WHERE x.file_group = #{file_group}), 1) 
		END
	, #{file_repo}, #{file_cate}, #{file_path}, #{file_name}
  , #{file_ext}, ifnull(#{file_size}, 0), ifnull(#{file_del_yn}, 'N'), #{file_thumnail}
	, current_timestamp(), current_timestamp(), #{creator}, #{updater}
)
	</insert>
	
	<delete id="deleteFile" parameterType="SYFileVo">
		UPDATE sy_file_info
		SET file_del_yn = #{file_del_yn}
			, date_updated = current_timestamp()
			, updater = #{updater}
		WHERE file_group = #{file_group}
		<if test="file_no != null and !''.equals(file_no) ">
			AND file_no = #{file_no}
		</if>
	</delete>
	
	<delete id="delFlagFile" parameterType="SYFileVo">
		UPDATE sy_file_info
		SET file_del_yn = 'Y'
			, date_updated = current_timestamp()
			, updater = #{updater}
		WHERE file_cate = #{file_cate}
		<if test="file_name != null and !''.equals(file_name) ">
			AND file_name LIKE concat('%', SUBSTRING_INDEX(#{file_name}, '.', 1), '%')
		</if>
		<if test="file_del_yn != null and !''.equals(file_del_yn) ">
			AND file_del_yn = #{file_del_yn}
		</if>
	</delete>
	
</mapper>