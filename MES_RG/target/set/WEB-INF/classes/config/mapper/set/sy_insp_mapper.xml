<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.passcombine.set.dao.SYInspDAO">

	<select id="selcInspMain" parameterType="SYProductVO" resultType="SYProductVO">
		select 
			tt.*, 
			(case 
				when tt.insp_chk = 0
				then '품질검사항목없음'
				when (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = tt.product_po and routing_code = tt.routing_code) = ''
				then '검사전'
				when (select ifnull(prod_end_time, '') from product_operation_tbl where product_po = tt.product_po and routing_code = tt.routing_code) != '' 
				then '검사완료'
				else '검사진행중' 
			end) flag,
			ifnull(
				(select insp_case From inspection_val_mng
				where product_po = tt.product_po
				and item_code = tt.item_code
				and routing_code = tt.routing_code
				and sample_type = 'c'
				order by inspection_seq, val_seq limit 1), 
				(select inspection_method 
				From inspection_master 
				where item_code = tt.item_code and routing_code = tt.routing_code order by inspection_seq limit 1)
			) insp_case,
			(
			select warehouse_gubun From product_operation_tbl
			where
				product_po = tt.product_po
				and routing_code= tt.routing_code
			) warehouse_gubun
		from 
		(
			select 
				a.order_num, a.product_po, a.item_nm, 
				ifnull(
				(
					select prod_menge from 
					product_operation_tbl
					where product_po = a.product_po
					order by real_seq*1
					limit 1	
				), (select product_menge from product_tbl where product_po = a.product_po)) product_menge,
				a.product_req_date, a.item_code, c.routing_code, 
				(select k.routing_nm from routing_master k where k.item_code = a.item_code and k.routing_code = c.routing_code) routing_nm,
				(
				select 
					count(*)
				from 
					inspection_chk_sht h
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and c.routing_code = h.routing_code
					and h.end_time is not null
				) end_insp_cnt,
				(
				select 
					count(*)
				from 
					inspection_chk_sht h
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and c.routing_code = h.routing_code
				) total_insp_cnt,
				(
				case when
					left(c.routing_code, 1) = 'Z'
				then 
					(select count(*) from income_inspect_master h where a.item_code = h.item_code AND h.use_yn = 'Y')
				else
					(select count(*) from inspection_master h where a.item_code = h.item_code AND h.use_yn = 'Y' and c.routing_code = h.routing_code)
				end
				) insp_chk 
			from 
				product_tbl a, product_operation_tbl c
			where 
				a.product_po = c.product_po
				and a.del_yn = 'N'
<!-- 				and (left(c.routing_code, 1) = 'Q' or right(c.routing_code, 2) = '-1') -->
				and (right(c.routing_code, 2) = '-1' or left(c.routing_code, 1) = 'Z')
<!--  				이력데이터 조회 용 조건 -->
				<if test="gubun !=null and !''.equals( gubun ) ">
					AND  c.status <![CDATA[ <> ]]> 'e'
					AND  c.status <![CDATA[ <> ]]> 'y'
					and (select prod_end_time from product_operation_tbl where product_po = a.product_po and c.real_seq-1 = real_seq) is not null
				</if>
				and left(c.routing_code,1) <![CDATA[ <> ]]> 'F'
				<if test="product_po !=null and !''.equals( product_po ) ">
					and a.product_po LIKE CONCAT('%', #{product_po}, '%')
				</if>
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code LIKE CONCAT('%', #{item_code}, '%')
				</if>
				<if test="item_nm !=null and !''.equals( item_nm ) ">
					and a.item_nm LIKE CONCAT('%', #{item_nm}, '%')
				</if>
				<if test="product_req_date !=null and !''.equals( product_req_date ) ">
					AND date_format(a.product_req_date, '%Y%m%d') BETWEEN left(#{product_req_date}, 8) AND right(#{product_req_date}, 8)
				</if>
				<if test='"S".equals(search_type)'>
					and left(a.product_po,1) = 'S'
				</if>
				<if test='"P".equals(search_type)'>
					and left(a.product_po,1) = 'P'
				</if>
				
<!--				<if test="routing_nm !=null and !''.equals( routing_nm ) "> -->
<!-- 				and routing_nm LIKE CONCAT(#{routing_nm}) -->
<!-- 				</if> -->
				<if test="routing_nm !=null and !''.equals( routing_nm ) ">
				and routing_nm IN
      			<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
           		#{item}
        		</foreach>
        		</if>
		) tt
		where 1=1
		<if test="flag !=null and !''.equals( flag ) ">
			AND (case 
				when tt.insp_chk = 0
				then '품질검사항목없음'
				when tt.end_insp_cnt = 0 
				then '검사전'
				when tt.total_insp_cnt = tt.end_insp_cnt 
				then '검사완료'
				else '검사진행중' 
			end) = #{flag}
		</if>
			
	</select>

	<select id="selcInspMain_final" parameterType="SYProductVO" resultType="SYProductVO">
		
		select 
			tt.*, 
			(case 
				when tt.insp_chk = 0
				then '품질검사항목없음'
				when (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = tt.product_po and routing_code = tt.routing_code) = ''
				then '검사전'
				when (select ifnull(prod_end_time, '') from product_operation_tbl where product_po = tt.product_po and routing_code = tt.routing_code) != '' 
				then '검사완료'
				else '검사진행중' 
			end) flag,
			ifnull(
				(select insp_case From inspection_val_mng
				where product_po = tt.product_po
				and item_code = tt.item_code
				and routing_code = tt.routing_code
				and sample_type = 'c'
				order by inspection_seq, val_seq limit 1), 
				(select inspection_method 
				From inspection_master 
				where item_code = tt.item_code and routing_code = tt.routing_code order by inspection_seq limit 1)
			) insp_case,
			(
			select warehouse_gubun From product_operation_tbl
			where
				product_po = tt.product_po
				and routing_code= tt.routing_code
			) warehouse_gubun
		from 
		(
			select 
				a.order_num, a.product_po, a.item_nm, c.real_seq,
				(select file_path from quality_file_info where a.item_code = item_code limit 1) file_path,
				ifnull(
				(
					select prod_menge from 
					product_operation_tbl
					where product_po = a.product_po
					order by real_seq*1
					limit 1	
				), (select product_menge from product_tbl where product_po = a.product_po)) product_menge, 
				a.product_req_date, a.item_code, c.routing_code, 
				(select k.routing_nm from routing_master k where k.item_code = a.item_code and k.routing_code = c.routing_code) routing_nm,
				(
				select 
					count(*)
				from 
					inspection_chk_sht h
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and c.routing_code = h.routing_code
					and h.end_time is not null
				) end_insp_cnt,
				(
				select 
					count(*)
				from 
					inspection_chk_sht h
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and c.routing_code = h.routing_code
				) total_insp_cnt,
				ifnull((
				select 
					sum(c_dfct_cnt)
				from 
					inspection_chk_sht h
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and c.routing_code = h.routing_code
				),0) prod_fail_menge,
				(
				select 
					count(*)
				from
					inspection_master h
				where 
					a.item_code = h.item_code
					AND h.use_yn = 'Y'
					and c.routing_code = h.routing_code
				) insp_chk,
				(
				select 
					end_time
				from 
					inspection_chk_sht h
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and c.routing_code = h.routing_code
					order by end_time desc limit 1
				) end_time,
				c.status
			from 
				product_tbl a, product_operation_tbl c
			where 
				a.product_po = c.product_po
				and a.del_yn = 'N'
				and (left(c.routing_code, 1) = 'Q' or left(c.routing_code,1) = 'F')
				and (select prod_end_time From product_operation_tbl where real_seq = c.real_seq-1 and product_po = c.product_po) is not null
				<if test="gubun !=null and !''.equals( gubun ) ">
					and (select prod_end_time From product_operation_tbl where real_seq = c.real_seq-1 and product_po = c.product_po) is not null
				</if>
				<if test="product_po !=null and !''.equals( product_po ) ">
					and a.product_po LIKE CONCAT('%', #{product_po}, '%')
				</if>
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code LIKE CONCAT('%', #{item_code}, '%')
				</if>
				<if test="item_nm !=null and !''.equals( item_nm ) ">
					and a.item_nm LIKE CONCAT('%', #{item_nm}, '%')
				</if>
				<if test="product_req_date !=null and !''.equals( product_req_date ) ">
					AND date_format(a.product_req_date, '%Y%m%d') BETWEEN left(#{product_req_date}, 8) AND right(#{product_req_date}, 8)
				</if>
				<if test='"S".equals(search_type)'>
					and left(a.product_po,1) = 'S'
				</if>
				<if test='"P".equals(search_type)'>
					and left(a.product_po,1) = 'P'
				</if>
		) tt
		where 1=1
		<if test="flag !=null and !''.equals( flag ) ">
			AND (case 
				when tt.insp_chk = 0
				then '품질검사항목없음'
				when tt.end_insp_cnt = 0 
				then '검사전'
				when tt.total_insp_cnt = tt.end_insp_cnt 
				then '검사완료'
				else '검사진행중' 
			end) = #{flag}
		</if>
		<!--이력데이터 조회 용 조건 -->
		<if test="gubun !=null and !''.equals( gubun ) ">
			and tt.status <![CDATA[ <> ]]> 'e' 
			AND tt.status <![CDATA[ <> ]]> 'y'
		</if>
			
	</select>
	
	<select id="selcInspChkSht" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			t.*, 
			ifnull(d.inspection_time, '') inspection_time,
			(ifnull(d.a_dfct_cnt, 0) + ifnull(d.b_dfct_cnt, 0) + ifnull(d.c_dfct_cnt, 0)) dfct_cnt,
			d.end_time, ifnull(d.worker, '') worker, ifnull(d.comment, '') comment,
			ifnull((	
				(case when d.a_dfct_cnt is null then 0 else 1 end)  
			),0) insp_cnt_a,
			ifnull((
				(case when d.b_dfct_cnt is null then 0 else 1 end)  
			),0) insp_cnt_b,
			ifnull((
				(case when d.c_dfct_cnt is null then 0 else 1 end)  
			),0) insp_cnt_c
		from 	
		(
		select 
			a.product_po, 
			b.item_code, 
			a.routing_code,
			c.inspection_seq,
			a.routing_nm,			
			ifnull(
				(
					select prod_menge from 
					product_operation_tbl
					where product_po = a.product_po
					order by real_seq*1
					limit 1	
				), (select product_menge from product_tbl where product_po = a.product_po)) product_menge,
			c.inspection_item,c.spec,c.min_spec,c.max_spec,c.use_yn, c.inspection_gubun, a.warehouse_gubun,
			ifnull((
				select h.insp_case 
				from inspection_val_mng h
				where h.sample_type = 'a' and a.product_po = h.product_po and b.item_code = h.item_code and a.routing_code = h.routing_code and c.inspection_seq = h.inspection_seq
				limit 1
			), (select inspection_method from inspection_master m where m.item_code = b.item_code AND m.use_yn = 'Y' and m.routing_code = a.routing_code and m.inspection_seq = c.inspection_seq)) insp_case_a,
			ifnull((
				select h.insp_case 
				from inspection_val_mng h
				where h.sample_type = 'b' and a.product_po = h.product_po and b.item_code = h.item_code and a.routing_code = h.routing_code and c.inspection_seq = h.inspection_seq
				limit 1
			), (select inspection_method from inspection_master m where m.item_code = b.item_code  AND m.use_yn = 'Y' and m.routing_code = a.routing_code and m.inspection_seq = c.inspection_seq)) insp_case_b,
			ifnull((
				select h.insp_case 
				from inspection_val_mng h
				where h.sample_type = 'c' and a.product_po = h.product_po and b.item_code = h.item_code and a.routing_code = h.routing_code and c.inspection_seq = h.inspection_seq
				limit 1
			), (select inspection_method from inspection_master m where m.item_code = b.item_code  AND m.use_yn = 'Y' and m.routing_code = a.routing_code and m.inspection_seq = c.inspection_seq)) insp_case_c
		from 
			product_operation_tbl a, product_tbl b, inspection_master c 
		where
			a.product_po = b.product_po
			and b.item_code = c.item_code
			and a.routing_code = c.routing_code
			
<!-- 			AND c.use_yn = 'Y' -->
			
			and a.product_po = #{product_po}
			and a.routing_code = #{routing_code}
			
<!-- 		) t left outer join inspection_chk_sht d on  -->
		) t inner join inspection_chk_sht d on 
			t.product_po = d.product_po
			and t.item_code = d.item_code
			and t.routing_code = d.routing_code
			and t.inspection_seq = d.inspection_seq
	</select>
	
		<select id="selcSuipInspChkSht" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			t.*, 
			ifnull(d.inspection_time, '') inspection_time,
			(ifnull(d.a_dfct_cnt, 0) + ifnull(d.b_dfct_cnt, 0) + ifnull(d.c_dfct_cnt, 0)) dfct_cnt,
			d.end_time, ifnull(d.worker, '') worker, ifnull(d.comment, '') comment,
			ifnull((	
				(case when d.a_dfct_cnt is null then 0 else 1 end)  
			),0) insp_cnt_a,
			ifnull((
				(case when d.b_dfct_cnt is null then 0 else 1 end)  
			),0) insp_cnt_b,
			ifnull((
				(case when d.c_dfct_cnt is null then 0 else 1 end)  
			),0) insp_cnt_c
		from 	
		(
		select 
			a.product_po, 
			b.item_code, 
			a.routing_code,
			c.inspection_seq,
			a.routing_nm,			
			ifnull(
				(
					select prod_menge from 
					product_operation_tbl
					where product_po = a.product_po
					order by real_seq*1
					limit 1	
				), (select product_menge from product_tbl where product_po = a.product_po)) product_menge,
			c.inspection_item,c.spec,c.min_spec,c.max_spec,c.use_yn, c.inspection_gubun, a.warehouse_gubun,
			ifnull((
				select h.insp_case 
				from inspection_val_mng h
				where h.sample_type = 'a' and a.product_po = h.product_po and b.item_code = h.item_code and a.routing_code = h.routing_code and c.inspection_seq = h.inspection_seq
				limit 1
			), (select inspection_method from inspection_master m where m.item_code = b.item_code AND m.use_yn = 'Y' and m.routing_code = a.routing_code and m.inspection_seq = c.inspection_seq)) insp_case_a,
			ifnull((
				select h.insp_case 
				from inspection_val_mng h
				where h.sample_type = 'b' and a.product_po = h.product_po and b.item_code = h.item_code and a.routing_code = h.routing_code and c.inspection_seq = h.inspection_seq
				limit 1
			), (select inspection_method from inspection_master m where m.item_code = b.item_code  AND m.use_yn = 'Y' and m.routing_code = a.routing_code and m.inspection_seq = c.inspection_seq)) insp_case_b,
			ifnull((
				select h.insp_case 
				from inspection_val_mng h
				where h.sample_type = 'c' and a.product_po = h.product_po and b.item_code = h.item_code and a.routing_code = h.routing_code and c.inspection_seq = h.inspection_seq
				limit 1
			), (select inspection_method from inspection_master m where m.item_code = b.item_code  AND m.use_yn = 'Y' and m.routing_code = a.routing_code and m.inspection_seq = c.inspection_seq)) insp_case_c
		from 
			product_operation_tbl a, product_tbl b, income_inspect_master c 
		where
			a.product_po = b.product_po
			and b.item_code = c.item_code

			
<!-- 			AND c.use_yn = 'Y' -->
			
			and a.product_po = #{product_po}
			and a.routing_code = #{routing_code}
			
<!-- 		) t left outer join inspection_chk_sht d on  -->
		) t inner join inspection_chk_sht d on 
			t.product_po = d.product_po
			and t.item_code = d.item_code
			and t.routing_code = d.routing_code
			and t.inspection_seq = d.inspection_seq
	</select>
	
	<select id="selcInspVal" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, a.sample_type, a.insp_case, a.insp_val, a.insp_rst,
			ifnull(
				(
					case when (left(a.routing_code, 1) = 'Z') 
					then (select inspection_item from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq)
					else (select inspection_item from inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq)
					end
				)
			,'') inspection_item, 
			ifnull(
				(
					case when (left(a.routing_code, 1) = 'Z') 
					then (select inspection_gubun from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq)
					else (select inspection_gubun from inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq)
					end
				)
			,'') inspection_gubun,
			ifnull((select inspection_point from inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq),'') inspection_point,
			(
				case when 
					left(a.routing_code, 1) != 'Z' and (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then 
					(select spec from inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq)
				when
					left(a.routing_code, 1) = 'Z' and (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then
					(select spec from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq)
				else 
					ifnull(a.spec, '')
				end
			) spec,
			(
				case when 
					left(a.routing_code, 1) != 'Z' and (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then 
					(select min_spec from inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq)
				when
					left(a.routing_code, 1) = 'Z' and (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then
					(select min_spec from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq)
				else 
					ifnull(a.min_spec, '')
				end
			) min_spec,
			(
				case when 
					left(a.routing_code, 1) != 'Z' and (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then 
					(select max_spec from inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq)
				when
					left(a.routing_code, 1) = 'Z' and (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then
					(select max_spec from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq)
				else 
					ifnull(a.max_spec, '')
				end
			) max_spec,
			ifnull((
				select worker From inspection_chk_sht 
				where a.product_po = product_po
				and a.item_code = item_code
				and a.routing_code = routing_code limit 1
			),'') worker,
			ifnull((
				select comment From inspection_chk_sht 
				where a.product_po = product_po
				and a.item_code = item_code
				and a.routing_code = routing_code limit 1
			),'') comment,
			(			
				select if(count(*), 1, 0) 
				From inspection_val_mng h
				where 
					h.product_po = a.product_po
					and h.val_seq = a.val_seq
					and h.item_code = a.item_code
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_a,
			(
				select if(count(*), 1, 0) 
				From inspection_val_mng h
				where 
					h.product_po = a.product_po
					and h.val_seq = a.val_seq
					and h.item_code = a.item_code
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_b,
			(
				select if(count(*), 1, 0) 
				From inspection_val_mng h
				where 
					h.product_po = a.product_po
					and h.val_seq = a.val_seq
					and h.item_code = a.item_code
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_c,
			(
				select 
					(case when h.a_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and a.routing_code = h.routing_code
					and a.inspection_seq = h.inspection_seq 
			) a_ing_status,
			(
				select 
					(case when h.b_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and a.routing_code = h.routing_code
					and a.inspection_seq = h.inspection_seq 
			) b_ing_status,
			(
				select 
					(case when h.c_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and a.routing_code = h.routing_code
					and a.inspection_seq = h.inspection_seq 
			) c_ing_status,
			
			(case 
				when (select ifnull(prod_str_time, '') from product_operation_tbl where product_po = a.product_po and routing_code = a.routing_code) = ''
				then '검사전'
				else '검사진행중' 
			end) insp_status
			
			
		from 
			inspection_val_mng a
		where 
			1=1
			<if test="product_po !=null and !''.equals( product_po ) ">
				and a.product_po = #{product_po}
			</if>
			<if test="item_code !=null and !''.equals( item_code ) ">
				and a.item_code = #{item_code}
			</if>
			<if test="routing_code !=null and !''.equals( routing_code ) ">
				and a.routing_code = #{routing_code}
			</if>
			<if test="inspection_seq !=null and !''.equals( inspection_seq ) ">
				and a.inspection_seq = #{inspection_seq}
			</if>
			<if test="sample_type !=null and !''.equals( sample_type ) ">
				and a.sample_type = #{sample_type}
			</if>
		order by a.inspection_seq, a.val_seq
	
	</select>
	
	<select id="selcInspRstVal" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, a.insp_case, a.insp_val, a.insp_rst, 
			b.inspection_gubun, b.spec, ifnull(b.min_spec, '') min_spec, ifnull(b.max_spec, '') max_spec,
			b.inspection_item,
			(
				select count(*) from inspection_val_mng c where 
				ifnull(#{product_po}, '') = c.product_po
				and a.item_code = c.item_code
				and a.routing_code = c.routing_code
				and a.inspection_seq = c.inspection_seq
				and a.val_seq = c.val_seq
				and c.insp_rst = 'NG'
				and a.sample_type = c.sample_type
			) insp_ng_cnt,
			(
			case 
				when 
				a.sample_type = 'a'
				then '초물'			
			when 
				a.sample_type = 'b'
				then '중물'			
			when 
				a.sample_type = 'c'
				then '종물'			
			end
			) sample_type
		from 
			inspection_val_mng a, inspection_master b
		where 
			a.item_code = b.item_code and a.routing_code = b.routing_code and a.inspection_seq = b.inspection_seq
			
			AND b.use_yn = 'Y'
			and a.product_po = #{product_po}
			and a.item_code = #{item_code}
			and a.routing_code = #{routing_code}
			<if test="inspection_seq !=null and !''.equals( inspection_seq ) ">
            	and a.inspection_seq = #{inspection_seq}
         	</if>
			and a.insp_rst <![CDATA[ <> ]]> ''
			and a.sample_type = 'c'
			<if test="sample_type !=null and !''.equals( sample_type ) ">
				and a.sample_type = #{sample_type}
			</if>			
		order by a.sample_type, a.val_seq
	</select>
	
	<select id="selcSuipInspRstVal" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, a.insp_case, a.insp_val, a.insp_rst, 
			b.inspection_gubun, b.spec, ifnull(b.min_spec, '') min_spec, ifnull(b.max_spec, '') max_spec,
			b.inspection_item,
			(
				select count(*) from inspection_val_mng c where 
				ifnull(#{product_po}, '') = c.product_po
				and a.item_code = c.item_code
				and a.routing_code = c.routing_code
				and a.inspection_seq = c.inspection_seq
				and a.val_seq = c.val_seq
				and c.insp_rst = 'NG'
				and a.sample_type = c.sample_type
			) insp_ng_cnt,
			(
			case 
				when 
				a.sample_type = 'a'
				then '초물'			
			when 
				a.sample_type = 'b'
				then '중물'			
			when 
				a.sample_type = 'c'
				then '종물'			
			end
			) sample_type
		from 
			inspection_val_mng a, income_inspect_master b
		where 
			a.item_code = b.item_code and a.inspection_seq = b.inspection_seq
			
			AND b.use_yn = 'Y'
			and a.product_po = #{product_po}
			and a.item_code = #{item_code}
			and a.routing_code = #{routing_code}
			<if test="inspection_seq !=null and !''.equals( inspection_seq ) ">
            	and a.inspection_seq = #{inspection_seq}
         	</if>
			and a.insp_rst <![CDATA[ <> ]]> ''
			and a.sample_type = 'c'
			<if test="sample_type !=null and !''.equals( sample_type ) ">
				and a.sample_type = #{sample_type}
			</if>			
		order by a.sample_type, a.val_seq
	</select>
	
	<insert id="saveInspVal" parameterType="SYInspVO">
 		INSERT INTO inspection_val_mng (
 			product_po,	item_code, routing_code, inspection_seq,
			val_seq, sample_type, insp_case, insp_val, insp_rst, 
			creator, updater, date_created, date_updated,
			min_spec,
			max_spec,
			spec
		)
		SELECT *
		  FROM (
		  		SELECT  
				#{product_po} as product_po, #{item_code} as item_code, #{routing_code} as routing_code, #{inspection_seq} as inspection_seq, 
		  		#{val_seq} as val_seq, #{sample_type} as sample_type, 
		  		ifnull(#{insp_case}, 
		  		ifnull((select inspection_method from inspection_master where item_code = #{item_code} and routing_code = #{routing_code} and inspection_seq = #{inspection_seq}), 'MD1541')) 
		  		as insp_case,
		  		#{insp_val} as insp_val, #{insp_rst} as insp_rst,
				#{creator} as creator, #{updater} as updater, current_timestamp() as date_created, current_timestamp() as date_updated,
				(select min_spec From inspection_master where item_code = #{item_code} and routing_code = #{routing_code} and inspection_seq = #{inspection_seq}) min_spec,
				(select max_spec From inspection_master where item_code = #{item_code} and routing_code = #{routing_code} and inspection_seq = #{inspection_seq}) max_spec,
				(select spec From inspection_master where item_code = #{item_code} and routing_code = #{routing_code} and inspection_seq = #{inspection_seq}) spec
		  ) s
		  ON DUPLICATE KEY
		UPDATE
			insp_case = s.insp_case,
			insp_val = s.insp_val,
			insp_rst = s.insp_rst,						
			updater = s.updater,
			date_updated = s.date_updated
	</insert>
	
	<insert id="saveChkSht" parameterType="SYInspVO">
 		INSERT INTO inspection_chk_sht (
 			product_po,	item_code, routing_code, inspection_seq,
			worker, comment, 
			creator, updater, date_created, date_updated
		)
		SELECT *
		  FROM (
		  		SELECT  
				#{product_po} as product_po, #{item_code} as item_code, #{routing_code} as routing_code, #{inspection_seq} as inspection_seq, 
		  		#{worker} as worker, #{comment} as comment,
				#{creator} as creator, #{updater} as updater, current_timestamp() as date_created, current_timestamp() as date_updated
		  ) s
		  ON DUPLICATE KEY
		UPDATE
			worker = s.worker,
			comment = s.comment,					
			updater = s.updater,
			date_updated = s.date_updated
	</insert>
	
	<insert id="saveFirstChkSht" parameterType="SYInspVO">
 		INSERT IGNORE INTO inspection_chk_sht (
 			product_po,	item_code, routing_code, inspection_seq,
			creator, updater, date_created, date_updated
		)
		SELECT s.*
		  FROM (				
				select #{product_po} as product_po, item_code, routing_code, inspection_seq, #{creator} as creator, #{updater} as updater, 
				current_timestamp() as date_created, current_timestamp() as date_updated
				from inspection_master where item_code in (select item_code From product_tbl where product_po = #{product_po}) and routing_code = #{routing_code} and use_yn = 'Y'
		  ) s
	</insert>
	
	
	<insert id="saveFirstInspVal" parameterType="SYInspVO">
 		INSERT IGNORE INTO inspection_val_mng (
 			product_po, item_code, routing_code, inspection_seq, val_seq, sample_type, insp_case, insp_val, insp_rst, spec, min_spec, max_spec, creator, updater, date_created, date_updated
		)
		SELECT s.*
		  FROM (				
				with AA as (
					select #{product_po} product_po, item_code, routing_code, inspection_seq, inspection_method as insp_case, 
					'' insp_val, '' insp_rst,
					spec, min_spec, max_spec
					from inspection_master 
					where item_code = #{item_code}
					and routing_code = #{routing_code}
					and use_yn = 'Y'
				), BB as (
					select seq val_seq from seq_1_to_${product_menge} 
				), CC as (
					select t.sample_type from 
					(select 'a' sample_type union select 'b' union select 'c') t
				)
				select
					AA.product_po,
					AA.item_code,
					AA.routing_code,
					AA.inspection_seq,
					BB.val_seq,
					CC.sample_type,
					AA.insp_case,
					AA.insp_val,
					AA.insp_rst,
					AA.spec,
					AA.min_spec,
					AA.max_spec,
					#{creator} as creator, 
					#{updater} as updater, 
					current_timestamp() as date_created, 
					current_timestamp() as date_updated
				from AA, BB, CC
				order by sample_type, inspection_seq, val_seq
		  ) s
	</insert>
	
	<delete id="delInspVal" parameterType="SYInspVO">
		DELETE FROM inspection_val_mng
		WHERE 
			product_po = #{product_po}
			and item_code = #{item_code}
			and routing_code = #{routing_code}
			and sample_type = #{sample_type}
			and inspection_seq = #{inspection_seq}
	</delete>
	
	<update id="updtChkShtDfctCnt" parameterType="SYInspVO">			
 		INSERT INTO inspection_chk_sht (
 			product_po,	item_code, routing_code, inspection_seq, 
 			<if test="a_dfct_cnt !=null and !''.equals( a_dfct_cnt ) ">
				a_dfct_cnt,
			</if>
			<if test="b_dfct_cnt !=null and !''.equals( b_dfct_cnt ) ">
				b_dfct_cnt,
			</if>
			<if test="c_dfct_cnt !=null and !''.equals( c_dfct_cnt ) ">
				c_dfct_cnt,
			</if>
			creator, updater, date_created, date_updated
		)
		SELECT *
		  FROM (
		  		SELECT  
				#{product_po} as product_po, #{item_code} as item_code, #{routing_code} as routing_code, #{inspection_seq} as inspection_seq,
				<if test="a_dfct_cnt !=null and !''.equals( a_dfct_cnt ) ">
					#{a_dfct_cnt} as a_dfct_cnt,
				</if>
				<if test="b_dfct_cnt !=null and !''.equals( b_dfct_cnt ) ">
					#{b_dfct_cnt} as b_dfct_cnt,
				</if>
				<if test="c_dfct_cnt !=null and !''.equals( c_dfct_cnt ) ">
					#{c_dfct_cnt} as c_dfct_cnt,
				</if>
				#{creator} as creator, #{updater} as updater, current_timestamp() as date_created, current_timestamp() as date_updated
		  ) s
		  ON DUPLICATE KEY
		UPDATE
			<if test="a_dfct_cnt !=null and !''.equals( a_dfct_cnt ) ">
				a_dfct_cnt = s.a_dfct_cnt,
			</if>
			<if test="b_dfct_cnt !=null and !''.equals( b_dfct_cnt ) ">
				b_dfct_cnt = s.b_dfct_cnt,
			</if>
			<if test="c_dfct_cnt !=null and !''.equals( c_dfct_cnt ) ">
				c_dfct_cnt = s.c_dfct_cnt,
			</if>
			updater = s.updater,
			date_updated = s.date_updated			
			
	</update>
	
	<insert id="fnshChkShtData" parameterType="SYInspVO">
 		INSERT INTO inspection_chk_sht (
 			product_po,	item_code, routing_code, inspection_seq, end_time,
			creator, updater, date_created, date_updated
		)
		SELECT *
		  FROM (
		  		SELECT  
				#{product_po} as product_po, #{item_code} as item_code, #{routing_code} as routing_code, #{inspection_seq} as inspection_seq, current_timestamp() as end_time,
				#{creator} as creator, #{updater} as updater, current_timestamp() as date_created, current_timestamp() as date_updated
		  ) s
		  ON DUPLICATE KEY
		UPDATE
			end_time = current_timestamp(),		
			updater = s.updater,
			date_updated = s.date_updated
	</insert>
		
	<select id="selcInspNgCnt" parameterType="SYInspVO" resultType="SYInspVO">
		
		select
			c.val_seq,
			(
				select if(count(*), 1, 0) From inspection_val_mng h
				where 
					h.product_po = c.product_po
					and c.item_code = h.item_code
					and h.val_seq = c.val_seq
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
		
			) insp_cnt_a,
				(
				select if(count(*), 1, 0) From inspection_val_mng h
				where 
					h.product_po = c.product_po
					and c.item_code = h.item_code
					and h.val_seq = c.val_seq
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_b,
				(
				select if(count(*), 1, 0) From inspection_val_mng h
				where 
					h.product_po = c.product_po
					and c.item_code = h.item_code
					and h.val_seq = c.val_seq
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_c,
			ifnull((
				select 
				(case when h.a_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					c.product_po = h.product_po
					and c.item_code = h.item_code
					and h.routing_code = #{routing_code}
					and h.inspection_seq = #{inspection_seq}
			),0) a_ing_status,
			ifnull((
				select 
				(case when h.b_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					c.product_po = h.product_po
					and c.item_code = h.item_code
					and h.routing_code = #{routing_code}
					and h.inspection_seq = #{inspection_seq}
			),0) b_ing_status,
			ifnull((
				select 
				(case when h.c_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					c.product_po = h.product_po
					and c.item_code = h.item_code
					and h.routing_code = #{routing_code}
					and h.inspection_seq = #{inspection_seq}
			),0) c_ing_status
		from 
			inspection_val_mng c  	
		where 
			c.product_po = #{product_po}
			and c.item_code = #{item_code}
		group by val_seq
				
		
		
		
		
		
		<!-- 	
		select 
			c.*,
			(
				select count(*) from inspection_val_mng d where 
				ifnull(#{product_po}, '') = d.product_po
				and c.item_code = d.item_code
				and c.routing_code = d.routing_code
				and c.inspection_seq = d.inspection_seq
				and c.val_seq = d.val_seq
				and d.sample_type = 'a'
				and d.insp_rst = 'NG'
				and d.insp_val <![CDATA[ <> ]]> ''
			) a_insp_ng_cnt,
			(
				select count(*) from inspection_val_mng d where 
				ifnull(#{product_po}, '') = d.product_po
				and c.item_code = d.item_code
				and c.routing_code = d.routing_code
				and C.inspection_seq = d.inspection_seq
				and c.val_seq = d.val_seq
				and d.sample_type = 'b'
				and d.insp_rst = 'NG'
				and d.insp_val <![CDATA[ <> ]]> ''
			) b_insp_ng_cnt,
			(
				select count(*) from inspection_val_mng d where 
				ifnull(#{product_po}, '') = d.product_po
				and c.item_code = d.item_code
				and c.routing_code = d.routing_code
				and c.inspection_seq = d.inspection_seq
				and c.val_seq = d.val_seq
				and d.sample_type = 'c'
				and d.insp_rst = 'NG'
				and d.insp_val <![CDATA[ <> ]]> ''
			) c_insp_ng_cnt
		from 
			inspection_val_mng c 
		where 
			c.product_po = #{product_po} 
			and c.item_code = #{item_code} 
			and c.routing_code = #{routing_code} 
			and c.inspection_seq = #{inspection_seq} 
		group by c.val_seq
		-->
	</select>
	
	<select id="chkInspVal" parameterType="SYInspVO" resultType="int">
<!-- 		select  -->
<!-- 			a.* -->
<!-- 		from  -->
<!-- 			inspection_val_mng a -->
<!-- 		where -->
<!-- 			a.product_po = #{product_po} -->
<!-- 			and a.item_code = #{item_code} -->
<!-- 			and a.routing_code = #{routing_code} -->
<!-- 			and ifnull(a.insp_rst, '') <![CDATA[ <> ]]> '' -->

		select if(ifnull(prod_str_time, '') = '', 0, 1)  from product_operation_tbl where product_po = #{product_po} and routing_code = #{routing_code} 
	</select>
	
	<select id="chkInspEnd" parameterType="SYInspVO" resultType="Int">
		select 
			if(end_cnt = mst_cnt, 1, 0) end_jdg 
		from 
		(
			select 
			(
			select 
				count(*) 
			from 
				inspection_chk_sht a
			where
				a.product_po = #{product_po}
				and a.item_code = #{item_code}
				and a.routing_code = #{routing_code}
				and a.end_time is not null
			) end_cnt,
			(	
			select 
				count(*) 
			from 
				inspection_chk_sht a
			where
				a.product_po = #{product_po}
				and a.item_code = #{item_code}
				and a.routing_code = #{routing_code}
			) mst_cnt
		) t
		
	</select>
	
	<update id="updateProdOprtSrtInfo" parameterType="SYInspVO">
		update 
			product_operation_tbl
		set 
			prod_str_time = (select date_updated from inspection_val_mng where product_po = #{product_po} and item_code = #{item_code} and routing_code = #{routing_code} and sample_type = 'c' limit 1),
			status = 'i',
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
			and routing_code = #{routing_code}
	</update>
	
	<update id="updateProdSrtInfo" parameterType="SYInspVO">
		update 
			product_tbl
		set 
			product_status_info = 'i',
			routing_code = #{routing_code},
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
	</update>
	
	<update id="updateProdOprtSrtInfoBtn" parameterType="SYInspVO">
		update 
			product_operation_tbl
		set 
			prod_str_time = current_timestamp(),
			status = 'i',
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
			and routing_code = #{routing_code}
	</update>
	
	<update id="updateProdEndInfo" parameterType="SYInspVO">
		update 
			product_tbl
		set
			<if test="next_row_flag !=null and !''.equals( next_row_flag ) ">
				product_status = 'y',
				product_status_info = 'y',
			</if> 
			<if test="''.equals( next_row_flag ) ">
				product_status_info = 'e',
			</if> 
			product_date = date_format(current_timestamp(), '%Y-%m-%d'),

			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
	</update>
	
	<select id="selcProdEndInfo" parameterType="SYInspVO" resultType="int">
		select count(*) from product_operation_tbl where real_seq =
		(select real_seq+1 From product_operation_tbl where product_po = #{product_po} and routing_code = #{routing_code})
		and product_po = #{product_po}
	</select>
	
	
	<update id="updateProdOprtEndInfo" parameterType="SYInspVO">
		update 
			product_operation_tbl
		set 
			prod_end_time = 
				(
					select date_updated From inspection_chk_sht
					where product_po = #{product_po} 
					and item_code = #{item_code} 
					and routing_code = #{routing_code} 
					order by date_updated desc limit 1
				),
			prod_fail_menge = 
				(				
					select count(*)
					from ( 
					select 
						*
					From 
						inspection_val_mng a
					where 
						a.insp_rst = 'NG'
						and a.product_po = #{product_po}
						and a.item_code = #{item_code}
						and a.routing_code = #{routing_code}
					group by a.val_seq
					) t
				),
			prod_menge =
				(
					(select product_menge from product_tbl where product_po = #{product_po})
				)
				-
				(				
					select count(*)
					from ( 
					select 
						*
					From 
						inspection_val_mng a
					where 
						a.insp_rst = 'NG'
						and a.product_po = #{product_po}
						and a.item_code = #{item_code}
						and a.routing_code = #{routing_code}
					group by a.val_seq
					) t
				),
			<if test="next_row_flag !=null and !''.equals( next_row_flag ) ">
				status = 'y',
			</if> 
			<if test="''.equals( next_row_flag ) ">
				status = 'e',
			</if> 
			
<!-- 			member_nm = ( -->
<!-- 				select worker From inspection_chk_sht  -->
<!-- 				where product_po = #{product_po} -->
<!-- 				and item_code = #{item_code} -->
<!-- 				and routing_code = #{routing_code} -->
<!-- 				and inspection_seq = #{inspection_seq} -->
<!-- 			), -->
			member_nm = #{member_nm},
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
			and routing_code = #{routing_code}
	</update>
		
	<select id="nextInspNum" parameterType="SYInspVO" resultType="Int">  	  
		with aa as
		(
			select t.* From 
			(
				select @rownum:=@rownum+1 rownum, a.* 
				From product_operation_tbl a,
				(SELECT @rownum:=0) TMP
				where a.product_po = #{product_po}
				and (right(a.routing_code,2) = '-1' || left(routing_code, 1) = 'F' || left(routing_code, 1) = 'Q')
				order by a.real_seq*1
			) t
		)
		select rownum From aa where routing_code = #{routing_code}
	</select>
	
	<select id="nextRtngInfo" parameterType="SYInspVO" resultType="SYInspVO">
		select a.* From product_operation_tbl a
		where a.product_po = #{product_po}
		and (right(a.routing_code,2) = '-1' || left(routing_code, 1) = 'F' || left(routing_code, 1) = 'Q')
		order by a.real_seq*1
		LIMIT #{next_row_num}, 1
		  	  
	</select>
	
	<select id="nextInspInfo" parameterType="SYInspVO" resultType="SYInspVO">  	  
		select #{product_po} product_po, a.item_code, a.routing_code, a.inspection_seq,
		(
			ifnull(
				(
					select prod_menge from 
					product_operation_tbl
					where product_po = #{product_po}
					order by real_seq*1
					limit 1	
				), (select product_menge from product_tbl where product_po = #{product_po}))
		) product_menge
		from inspection_master a
		where item_code = (select item_code From product_tbl where product_po = #{product_po})
		
		AND a.use_yn = 'Y'
		and routing_code = #{routing_code}
	</select>
	
	<select id="nowInspNgInfo" parameterType="SYInspVO" resultType="SYInspVO">  	  
		select * from inspection_val_mng		
		where product_po = #{product_po}
		and item_code = #{item_code}
		and routing_code = #{routing_code}
		and insp_rst = 'NG'
		group by val_seq	
	</select>
	
	<insert id="instWarehousingInfo" parameterType="SYInspVO">
 		INSERT INTO `warehousing_tbl` 
 		(
	 		`in_date_doc`, `in_type`, `warehousing_status`, `purchase_order_num`, `purchase_num`, 
	 		`in_date`, 
	 		`item_code`, 
	 		`item_nm`, 
	 		`item_spec`, 
	 		`item_type_code`, 
	 		`item_type_nm`, 
	 		`serial_no`, `meins`, 
	 		`in_menge`, 
	 		`delivery_date`, 
	 		`file_group`, `file_no`, `mill_sheet_no`, `file_repo`, `file_cate`, 
	 		`file_path`, `file_name`, `file_ext`, `file_size`, 
	 		`creator`, `updater`, `date_created`, `date_updated`
	 	)
		VALUES 
		(
			fn_in_date_doc(), 'm', 'i', #{product_po}, '010', 
			(
				select date_format(prod_end_time, '%Y-%m-%d') From product_operation_tbl
				where product_po = #{product_po}
				and routing_code = #{routing_code}
			), 
			(select item_code from product_tbl where product_po = #{product_po}), 
			(select item_nm from product_tbl where product_po = #{product_po}), 
			'', 
			(select item_type_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})),
			(select item_type_nm From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})), 
			'', 'EA', 
			(
				select prod_menge From product_operation_tbl
				where product_po = #{product_po}
				and routing_code = #{routing_code}
			), 
			NULL, 
			'', 1, '', '', '', 
			'', '', '', 0,  
			#{creator}, #{updater}, current_timestamp(), current_timestamp())

	</insert>
	
	<insert id="instWarehouseInfo" parameterType="SYInspVO">
 		INSERT INTO warehouse_tbl (
 			business_code, business_nm, 
 			warehouse_code, 
			warehouse_nm, 
 			item_code,
 			item_nm, 
 			item_spec, 
 			item_type_code, 
 			item_type_nm, 
 			meins,
			warehousing_price, 
			warehousing_qty,
			del_yn,
			creator, updater, date_created, date_updated
		)
		SELECT *
		  FROM (
		  		SELECT  
				'MD1243' as business_code, 'Consumable Parts' as business_nm, 
				(
					select warehouse_code From warehouse_master_detail where item_type_code = 
					(select item_type_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po}))
				)as warehouse_code, 
				(
					select warehouse_nm From warehouse_master_detail where item_type_code = 
					(select item_type_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po}))
				) as warehouse_nm, 
				(select item_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})) as item_code, 
				(select item_nm From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})) as item_nm, 
				(select item_spec From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})) as item_spec, 
				(select item_type_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})) as item_type_code, 
				(select item_type_nm From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})) as item_type_nm, 
				(select meins From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})) as meins,
		  		(select unit_price from product_tbl where product_po = #{product_po}) as warehousing_price,
		  		(
			  		select prod_menge From product_operation_tbl
					where product_po = #{product_po}
					and routing_code = #{routing_code}
		  		) as warehousing_qty, 
		  		'N' as del_yn,
				#{creator} as creator, #{updater} as updater, current_timestamp() as date_created, current_timestamp() as date_updated
		  ) s
		  ON DUPLICATE KEY
		UPDATE
			warehousing_qty = (
			  		select prod_menge + #{warehousing_qty} From product_operation_tbl
					where product_po = #{product_po}
					and routing_code = #{routing_code}
		  	),  					
			updater = s.updater,
			date_updated = s.date_updated
	</insert>
	
	<select id="selecWarehouseInfo" parameterType="SYInspVO" resultType="Int">  	  
		select ifnull(sum(warehousing_qty), 0) warehousing_qty from warehouse_tbl		
		where business_code = 'MD1243'
		and warehouse_code = 
		(select warehouse_code From warehouse_master_detail where item_type_code = 
		(select item_type_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po})))
		and item_code = (select item_code From material_tbl where item_code = (select item_code from product_tbl where product_po = #{product_po}))
	</select>
	
	<select id="qLoadItemCode" parameterType="SYMaterialVo" resultType="SYMaterialVo">  	  
		select * From material_tbl where del_yn = 'N'
	</select>
	
	<select id="getRtngInfo" parameterType="SYInspVO" resultType="SYInspVO">  	  
<!-- 		select a.* From inspection_master a where a.item_code = #{item_code} -->
<!-- 		and (right(a.routing_code,2) = '-1' || left(a.routing_code, 1) = 'F' || left(a.routing_code, 1) = 'Q') -->
<!-- 		order by routing_code*1 -->
		select
			a.item_code, a.routing_code, a.inspection_seq, 
			ifnull(
				(select routing_nm from routing_master where routing_code = a.routing_code and item_code = a.item_code),
				(select routing_nm From inspection_master where a.item_code = item_code and a.routing_code = routing_code and routing_nm is not null limit 1)
			)
			routing_nm,
			a.inspection_item, a.inspection_gubun, a.inspection_tool, a.inspection_method, 
			a.spec, a.min_spec, a.max_spec, a.inspection_point, a.use_yn, a.creator, a.updater, a.date_created, a.date_updated
		From inspection_master a where a.item_code = #{item_code}
		and (right(a.routing_code,2) = '-1' || left(a.routing_code, 1) = 'F' || left(a.routing_code, 1) = 'Q')
		group by a.item_code, a.routing_code
		order by routing_code*1
	</select>
	
	<select id="getInspInfo" parameterType="SYInspVO" resultType="SYInspVO">  	  
<!-- 		select a.* From inspection_master a where a.item_code = #{item_code} -->
<!-- 		and (right(a.routing_code,2) = '-1' || left(a.routing_code, 1) = 'F' || left(a.routing_code, 1) = 'Q') -->
<!-- 		group by a.item_code, a.routing_code -->
<!-- 		order by routing_code*1 -->
		select a.* From inspection_master a 
		where a.use_yn = 'Y'
		and a.item_code = #{item_code}
		and a.routing_code = #{routing_code}
		and (right(a.routing_code,2) = '-1' || left(a.routing_code, 1) = 'F' || left(a.routing_code, 1) = 'Q')
		order by routing_code*1
	</select>
		
	<select id="getQAnalData_1" parameterType="SYInspVO" resultType="SYInspVO">  	  
		with aa as (
			select t.* from 
			(
				select a.insp_rst, a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, b.inspection_item,
				(
					case when b.inspection_gubun <![CDATA[ <> ]]> 'MD1543'
					then if(a.insp_val = 'OK', 1, if(a.insp_val = 'NG',0,''))
					else a.insp_val
					end
				) insp_val,
				(
					select end_time 
					from inspection_chk_sht k
					where
					a.product_po = k.product_po
					and a.item_code = k.item_code
					and a.routing_code = k.routing_code
					and a.inspection_seq = k.inspection_seq
				) end_time,
				ifnull(a.spec, (select spec from inspection_master where a.item_code = item_code AND use_yn = 'Y' and a.routing_code = routing_code and a.inspection_seq = inspection_seq)) spec,
				ifnull(a.min_spec, (select min_spec from inspection_master where a.item_code = item_code AND use_yn = 'Y' and a.routing_code = routing_code and a.inspection_seq = inspection_seq)) min_spec, 
				ifnull(a.max_spec, (select max_spec from inspection_master where a.item_code = item_code AND use_yn = 'Y' and a.routing_code = routing_code and a.inspection_seq = inspection_seq)) max_spec
				From inspection_val_mng a left outer join inspection_master b
				on
				a.item_code  = b.item_code
				
				and a.routing_code = b.routing_code
				and a.inspection_seq = b.inspection_seq 
				where 1=1
				AND b.use_yn = 'Y'
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code = #{item_code}
				</if>
				<if test="routing_code !=null and !''.equals( routing_code ) ">
					and a.routing_code = #{routing_code}
				</if>
				<if test="inspection_seq !=null and !''.equals( inspection_seq ) ">
					and b.inspection_seq = #{inspection_seq}
				</if>
				
				and ifnull(insp_val,'') <![CDATA[ <> ]]> ''
			) t
			<if test="m_year !=null and !''.equals( m_year ) ">
				where left(t.end_time,4) between #{m_year} and #{n_year}
			</if>
		)
		select 
		substring(end_time, 1,4) end_year,
		substring(end_time, 6,2) end_month,
		item_code, routing_code, inspection_seq,
		ifnull((select count(*) from aa where insp_rst = 'OK' and substring(end_time, 6,2) = substring(t.end_time, 6,2) group by substring(end_time, 1,4), substring(end_time, 6,2)), 0) prod_menge,
		ifnull((select count(*) from aa where insp_rst = 'NG' and substring(end_time, 6,2) = substring(t.end_time, 6,2) group by substring(end_time, 1,4), substring(end_time, 6,2)), 0) ng_cnt
		From aa t
		group by substring(end_time, 1,4), substring(end_time, 6,2)
	</select>

	<select id="getQAnalData_2" parameterType="SYInspVO" resultType="SYInspVO">  	  
		
		select t.* from 
		(
			select a.insp_rst, a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, b.inspection_item,
			(
				case when b.inspection_gubun <![CDATA[ <> ]]> 'MD1543'
				then if(a.insp_val = 'OK', 1, if(a.insp_val = 'NG',0,''))
				else a.insp_val
				end
			) insp_val,
			(
				select end_time 
				from inspection_chk_sht k
				where
				a.product_po = k.product_po
				and a.item_code = k.item_code
				and a.routing_code = k.routing_code
				and a.inspection_seq = k.inspection_seq
			) end_time,
			ifnull(a.spec, (select spec from inspection_master where a.item_code = item_code AND use_yn = 'Y' and a.routing_code = routing_code and a.inspection_seq = inspection_seq)) spec,
			ifnull(a.min_spec, (select min_spec from inspection_master where a.item_code = item_code AND use_yn = 'Y' and a.routing_code = routing_code and a.inspection_seq = inspection_seq)) min_spec, 
			ifnull(a.max_spec, (select max_spec from inspection_master where a.item_code = item_code AND use_yn = 'Y' and a.routing_code = routing_code and a.inspection_seq = inspection_seq)) max_spec
			From inspection_val_mng a left outer join inspection_master b
			on
			a.item_code  = b.item_code
			
			and a.routing_code = b.routing_code
			and a.inspection_seq = b.inspection_seq 
			where 1=1
			AND b.use_yn = 'Y'
			<if test="item_code !=null and !''.equals( item_code ) ">
				and a.item_code = #{item_code}
			</if>
			<if test="routing_code !=null and !''.equals( routing_code ) ">
				and a.routing_code = #{routing_code}
			</if>
			<if test="inspection_seq !=null and !''.equals( inspection_seq ) ">
				and b.inspection_seq = #{inspection_seq}
			</if>
			
			and ifnull(insp_val,'') <![CDATA[ <> ]]> ''
		) t
		<if test="m_year !=null and !''.equals( m_year ) ">
			where left(t.end_time,4) between #{m_year} and #{n_year}
		</if>
		order by product_po,routing_code*1,val_seq*1

	</select>
	
	<select id="getPnImg" parameterType="SYQualityFileVo" resultType="SYQualityFileVo">  	  
		select * From quality_file_info where item_code = #{item_code} 

	</select>
	
	<select id="dfctKpiGraph" parameterType="SYInspVO" resultType="SYInspVO">  	  
		with tmp as (
			select aa.m_year, aa.m_month, ifnull(bb.c_dfct_cnt,0) c_dfct_cnt From (
				select '2020' m_year, base.m m_month
				from
				(select '01' m union select '02' m union select '03' m union select '04' m union select '05' m union select '06' m 
				union select '07' m union select '08' m union select '09' m union select '10' m union select '11' m union select '12' m) base
			) aa left outer join 
			(
				select
				ifnull(sum(t.c_dfct_cnt), 0) c_dfct_cnt,
				t.str_year m_year,
				t.str_month m_month
				From 
				(
				select 
				a.item_code,
				a.item_nm,
				b.product_po, 
				b.prod_str_time,
				b.prod_menge,
				substring(b.prod_str_time, 1, 4) str_year,
				substring(b.prod_str_time, 6, 2) str_month,
				(select sum(ifnull(c_dfct_cnt, 0)) From inspection_chk_sht where a.product_po = product_po) c_dfct_cnt
				From 
				product_tbl a,
				product_operation_tbl b
				where 
				a.product_po = b.product_po
				and b.prod_str_time is not null
				and a.del_yn = 'N'
				and b.real_seq = 1
				and substring(b.prod_str_time, 1, 4) = #{m_year}
				<if test="item_code !=null and !''.equals( item_code ) ">
					and item_code = #{item_code} 
				</if>
				) t
				group by m_year, m_month	
			) bb on aa.m_year = bb.m_year and aa.m_month = bb.m_month
		) 
		select
		m_year, m_month,
		(
			case 
			when m_month = '01' and DATE_FORMAT(NOW(), '%m') > 0
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 1), 0)
			when m_month = '02' and DATE_FORMAT(NOW(), '%m') > 1
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 2), 0)
			when m_month = '03' and DATE_FORMAT(NOW(), '%m') > 2
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 3), 0)
			when m_month = '04' and DATE_FORMAT(NOW(), '%m') > 3
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 4), 0)
			when m_month = '05' and DATE_FORMAT(NOW(), '%m') > 4
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 5), 0)
			when m_month = '06' and DATE_FORMAT(NOW(), '%m') > 5
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 6), 0)
			when m_month = '07' and DATE_FORMAT(NOW(), '%m') > 6
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 7), 0)
			when m_month = '08' and DATE_FORMAT(NOW(), '%m') > 7
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 8), 0)
			when m_month = '09' and DATE_FORMAT(NOW(), '%m') > 8
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 9), 0)
			when m_month = '10' and DATE_FORMAT(NOW(), '%m') > 9 
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 10), 0)
			when m_month = '11' and DATE_FORMAT(NOW(), '%m') > 10
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 11), 0)
			when m_month = '12' and DATE_FORMAT(NOW(), '%m') > 11
			then ifnull((select sum(c_dfct_cnt) from tmp where m_month between 1 and 12), 0)
			else
				0
			end
		) c_dfct_cnt
		from tmp
		

	</select>
	
	
	<select id="dfctKpiLtGrid" parameterType="SYInspVO" resultType="SYInspVO">  
		select
			t.item_code,
			t.item_nm,
			sum(t.prod_menge) prod_menge,
			ifnull(sum(t.c_dfct_cnt), 0) c_dfct_cnt,
			(sum(t.prod_menge)-ifnull(sum(t.c_dfct_cnt),0)) prfr_menge,
			concat(round((ifnull(sum(t.c_dfct_cnt),0)/sum(t.prod_menge))*100,2), '%') dfct_rate,
			t.str_year m_year,
			t.str_month m_month
		From 
		(
			select 
				a.item_code,
				a.item_nm,
				b.product_po, 
				b.prod_str_time,
				b.prod_menge,
				substring(b.prod_str_time, 1, 4) str_year,
				substring(b.prod_str_time, 6, 2) str_month,
				(select sum(ifnull(c_dfct_cnt, 0)) From inspection_chk_sht where a.product_po = product_po) c_dfct_cnt
			From 
				product_tbl a,
				product_operation_tbl b
			where 
				a.product_po = b.product_po
				and b.prod_str_time is not null
				and a.del_yn = 'N'
				and b.real_seq = 1
				and substring(b.prod_str_time, 1, 4) = #{m_year}
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code = #{item_code} 
				</if>
		) t
		group by item_code, m_year, m_month
		having ifnull(sum(t.c_dfct_cnt), 0) != 0
		order by round((ifnull(sum(t.c_dfct_cnt),0)/sum(t.prod_menge))*100,2) desc
	</select>
	
	<select id="dfctKpiRtGrid" parameterType="SYInspVO" resultType="SYInspVO">  
		select
			t.item_code,
			t.item_nm,
			sum(t.prod_menge) prod_menge,
			sum(ifnull(t.c_dfct_cnt, 0)) c_dfct_cnt,
			(sum(t.prod_menge)-ifnull(sum(t.c_dfct_cnt),0)) prfr_menge,
			concat(round((ifnull(sum(t.c_dfct_cnt),0)/sum(t.prod_menge))*100,2), '%') dfct_rate,
			t.str_year m_year,
			t.str_month m_month,
			t.str_day m_day,
			concat(t.str_year,'-',t.str_month,'-',t.str_day) p_mm 
		From 
		(
			select 
				a.item_code,
				a.item_nm,
				b.product_po, 
				b.prod_str_time,
				b.prod_menge,
				substring(b.prod_str_time, 1, 4) str_year,
				substring(b.prod_str_time, 6, 2) str_month,
				substring(b.prod_str_time, 9, 2) str_day,
				(select sum(ifnull(c_dfct_cnt, 0)) From inspection_chk_sht where a.product_po = product_po) c_dfct_cnt
			From 
				product_tbl a,
				product_operation_tbl b
			where 
				a.product_po = b.product_po
				and b.prod_str_time is not null
				and a.del_yn = 'N'
				and b.real_seq = 1
				and substring(b.prod_str_time, 1, 4) = #{m_year}
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code = #{item_code} 
				</if>
		) t
		group by item_code, m_year, m_month, m_day
		having sum(ifnull(t.c_dfct_cnt, 0)) != 0
		order by round((ifnull(sum(t.c_dfct_cnt),0)/sum(t.prod_menge))*100,2) desc
	</select>
	
	<select id="chkSheetData" parameterType="SYInspVO" resultType="SYInspVO">  	  
		select a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.inspection_time, a.worker, a.a_dfct_cnt, a.b_dfct_cnt, a.c_dfct_cnt, a.`comment`, a.end_time,
		(select min_spec from inspection_val_mng where product_po = a.product_po and routing_code = a.routing_code and inspection_seq = a.inspection_seq limit 1) min_spec,
		(select max_spec from inspection_val_mng where product_po = a.product_po and routing_code = a.routing_code and inspection_seq = a.inspection_seq limit 1) min_spec,
		(select spec from inspection_val_mng where product_po = a.product_po and routing_code = a.routing_code and inspection_seq = a.inspection_seq limit 1) spec
		from inspection_chk_sht a
		where a.product_po = #{product_po}
		and a.routing_code = #{routing_code}
	</select>
	
	<update id="updtChkSht" parameterType="SYInspVO">
		update 
			inspection_chk_sht
		set 
			worker = #{worker}, 
			comment = #{comment}, 
			<if test="end_time !=null and !''.equals( end_time ) ">
				end_time = #{end_time}, 
			</if>
			<if test="a_dfct_cnt !=null and !''.equals( a_dfct_cnt ) ">
				a_dfct_cnt = #{a_dfct_cnt}, 
			</if>
			<if test="b_dfct_cnt !=null and !''.equals( b_dfct_cnt ) ">
				b_dfct_cnt = #{b_dfct_cnt}, 
			</if>
			<if test="c_dfct_cnt !=null and !''.equals( c_dfct_cnt ) ">
				c_dfct_cnt = #{c_dfct_cnt}, 
			</if>
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
			and item_code = #{item_code}
			and routing_code = #{routing_code}
	</update>
	
	<update id="fnshInspData" parameterType="SYInspVO">
 		update 
			inspection_chk_sht
		set 
			end_time = current_timestamp(),
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
			and item_code = #{item_code}
			and routing_code = #{routing_code}
	</update>
	
	<select id="chkInspIng" parameterType="SYInspVO" resultType="Int">
		select count(*) From inspection_val_mng
		where
		product_po = #{product_po}
		and routing_code = #{routing_code}
		and ifnull(insp_rst, '') = ''
		and sample_type = 'c'
		
	</select>
	
	<insert id="saveFirstSuipChkSht" parameterType="SYInspVO">
 		INSERT IGNORE INTO inspection_chk_sht (
 			product_po,	item_code, routing_code, inspection_seq,
			creator, updater, date_created, date_updated
		)
		SELECT s.*
		  FROM (				
				select #{product_po} as product_po, item_code, 'Z1' routing_code, inspection_seq, #{creator} as creator, #{updater} as updater, 
				current_timestamp() as date_created, current_timestamp() as date_updated
				from income_inspect_master where item_code = #{item_code} and use_yn = 'Y'
		  ) s
	</insert>
	
	
	<insert id="saveFirstSuipInspVal" parameterType="SYInspVO">
 		INSERT IGNORE INTO inspection_val_mng (
 			product_po, item_code, routing_code, inspection_seq, val_seq, sample_type, insp_case, insp_val, insp_rst, spec, min_spec, max_spec, creator, updater, date_created, date_updated
		)
		SELECT s.*
		  FROM (				
				with AA as (
					select #{product_po} product_po, item_code, 'Z1' routing_code, inspection_seq, 'MD1541' as insp_case, 
					'' insp_val, '' insp_rst,
					spec, min_spec, max_spec
					from income_inspect_master 
					where item_code = #{item_code}
					and use_yn = 'Y'
				), BB as (
					select seq val_seq from seq_1_to_${product_menge}
<!-- 					select t.val_seq from  -->
<!-- 					( -->
<!-- 					select (t1.m*100 + t2.m*10 + t3.m) val_seq -->
<!-- 					From  -->
<!-- 					(select 0 m union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9 ) t1, -->
<!-- 					(select 0 m union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9 ) t2, -->
<!-- 					(select 0 m union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9 ) t3 -->
<!-- 					) t -->
<!-- 					where t.val_seq between 1 and #{product_menge}  -->
				), CC as (
					select t.sample_type from 
					(select 'a' sample_type union select 'b' union select 'c') t
				)
				select
					AA.product_po,
					AA.item_code,
					AA.routing_code,
					AA.inspection_seq,
					BB.val_seq,
					CC.sample_type,
					AA.insp_case,
					AA.insp_val,
					AA.insp_rst,
					AA.spec,
					AA.min_spec,
					AA.max_spec,
					#{creator} as creator, 
					#{updater} as updater, 
					current_timestamp() as date_created, 
					current_timestamp() as date_updated
				from AA, BB, CC
				order by sample_type, inspection_seq, val_seq
		  ) s
	</insert>
	
	<select id="selcSuipInspVal" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, a.sample_type, a.insp_case, a.insp_val, a.insp_rst,
			ifnull((select inspection_item from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq),'') inspection_item, 
			ifnull((select inspection_gubun from income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq),'') inspection_gubun,
			'' inspection_point,
			ifnull(a.spec, '') spec, ifnull(a.min_spec, '') min_spec, ifnull(a.max_spec, '') max_spec,
			ifnull((
				select worker From inspection_chk_sht 
				where a.product_po = product_po
				and a.item_code = item_code
				and a.routing_code = routing_code limit 1
			),'') worker,
			ifnull((
				select comment From inspection_chk_sht 
				where a.product_po = product_po
				and a.item_code = item_code
				and a.routing_code = routing_code limit 1
			),'') comment,
			(			
				select if(count(*), 1, 0) 
				From inspection_val_mng h
				where 
					h.product_po = a.product_po
					and h.val_seq = a.val_seq
					and h.item_code = a.item_code
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_a,
			(
				select if(count(*), 1, 0) 
				From inspection_val_mng h
				where 
					h.product_po = a.product_po
					and h.val_seq = a.val_seq
					and h.item_code = a.item_code
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_b,
			(
				select if(count(*), 1, 0) 
				From inspection_val_mng h
				where 
					h.product_po = a.product_po
					and h.val_seq = a.val_seq
					and h.item_code = a.item_code
					and h.insp_rst = 'NG'
					and ifnull(h.insp_val, '') <![CDATA[ <> ]]> ''
			) insp_cnt_c,
			(
				select 
					(case when h.a_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and a.routing_code = h.routing_code
					and a.inspection_seq = h.inspection_seq 
			) a_ing_status,
			(
				select 
					(case when h.b_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and a.routing_code = h.routing_code
					and a.inspection_seq = h.inspection_seq 
			) b_ing_status,
			(
				select 
					(case when h.c_dfct_cnt is null then 0 else 1 end)  
				from 
					inspection_chk_sht h 
				where 
					a.product_po = h.product_po
					and a.item_code = h.item_code
					and a.routing_code = h.routing_code
					and a.inspection_seq = h.inspection_seq 
			) c_ing_status
		from 
			inspection_val_mng a
		where 
			1=1
			<if test="product_po !=null and !''.equals( product_po ) ">
				and a.product_po = #{product_po}
			</if>
			<if test="item_code !=null and !''.equals( item_code ) ">
				and a.item_code = #{item_code}
			</if>
			<if test="routing_code !=null and !''.equals( routing_code ) ">
				and a.routing_code = #{routing_code}
			</if>
			<if test="inspection_seq !=null and !''.equals( inspection_seq ) ">
				and a.inspection_seq = #{inspection_seq}
			</if>
			<if test="sample_type !=null and !''.equals( sample_type ) ">
				and a.sample_type = #{sample_type}
			</if>
		order by a.inspection_seq, a.val_seq	
	</select>
	
	<update id="saveOrdInspInfo" parameterType="SYInspVO">
		update 
			purchase_order_detail
		set
		<if test="purchase_status !=null and !''.equals( purchase_status ) ">
			purchase_status = #{purchase_status},
		</if>
		<if test="prod_menge !=null and !''.equals( prod_menge ) ">
			pass_menge = 
				#{prod_menge} - ifnull((select sum(c_dfct_cnt) From inspection_chk_sht where product_po = #{product_po}), 0),
		</if>	
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			purchase_order_num = SUBSTRING_INDEX(SUBSTRING_INDEX(#{product_po},'-', 1), '-', -1)
			and purchase_num = SUBSTRING_INDEX(SUBSTRING_INDEX(#{product_po},'-', 2), '-', -1)
	</update>
	
	<select id="getOrdCntInfo" parameterType="SYInspVO" resultType="String">
		select menge 
		from purchase_order_detail
		where
		purchase_order_num = SUBSTRING_INDEX(SUBSTRING_INDEX(#{product_po},'-', 1), '-', -1)
		and purchase_num = SUBSTRING_INDEX(SUBSTRING_INDEX(#{product_po},'-', 2), '-', -1)
	</select>
	
	<update id="updateInspRst" parameterType="SYInspVO">
		update
			inspection_val_mng
		set
			insp_rst = #{insp_rst}
		where
			product_po = #{product_po}
			and item_code = #{item_code}
			and routing_code = #{routing_code}
			and val_seq = #{val_seq}
	</update>
	
	<select id="chkInspIptCnt" parameterType="SYInspVO" resultType="Int">
<!-- 		select count(*) From inspection_val_mng where -->
<!-- 		product_po = #{product_po} -->
<!-- 		and routing_code = #{routing_code} -->
<!-- 		and sample_type = 'c' -->
<!-- 		and insp_case = 'MD1541' -->
<!-- 		and ifnull(insp_val,'') <![CDATA[ <> ]]> '' -->
		select count(*) 
		From inspection_val_mng a where
		product_po = #{product_po}
		and routing_code = #{routing_code}
		and sample_type = 'c'
		and ifnull(insp_val,'') <![CDATA[ <> ]]> ''
		<if test='"Z".equals(routing_code.substring(0,1))'>
			and (select inspection_gubun From income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq) = 'MD1543'
		</if>
		<if test='!"Z".equals(routing_code.substring(0,1))'>
			and (select inspection_gubun From inspection_master where a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq) = 'MD1543'
		</if>
		
	</select>
	
	<!-- 1118 -->
	<select id="selectIncome_result_s" parameterType="SYIncome_resultVo" resultType="SYIncome_resultVo">
	SELECT s.*
	FROM
	(	
		
		SELECT 
			a.item_spec, a.item_type_code, a.item_type_nm, a.unit_price, 
			c.purchase_order_num,a.purchase_num,a.item_code,a.item_nm,c.account_code, c.account_nm, a.menge, a.in_menge, 
			( SELECT income_date
				FROM income_result
			  WHERE a.purchase_order_num =purchase_order_num 
			  	AND a.purchase_num =purchase_num AND del_yn ='N') AS income_date, 
			(
				CASE  
				WHEN (SELECT purchase_status FROM purchase_order_detail WHERE purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num)
				 = 'R' THEN '발주요청' 
				WHEN (SELECT purchase_status FROM purchase_order_detail WHERE purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num)
				 = 'I' THEN '검사진행중'
				WHEN (SELECT purchase_status FROM purchase_order_detail WHERE purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num)
				 = 'S' THEN '수입검사완료' 
				WHEN (SELECT purchase_status FROM purchase_order_detail WHERE purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num)
				 = 'P' THEN '부분입고' 
				WHEN (SELECT purchase_status FROM purchase_order_detail WHERE purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num)
				 = 'Y' THEN '입고완료'				  
				END
			) insp_status
		FROM purchase_order_detail a,material_tbl b,purchase_order_master c
		WHERE 1=1 
			AND a.item_code =b.item_code 
			AND a.purchase_order_num = c.purchase_order_num 
			AND b.receiving_inspection_yn ='Y' 
			<!-- 이거 윗 부분 없애면 전체 나오는 거임. -->
			<if test="gubun_all == null or ''.equals( gubun_all ) ">
				AND (a.purchase_status ='R' OR a.purchase_status ='I')
			</if>
			AND a.del_yn ='N'
			<if test="account_nm!=null and !''.equals(account_nm) ">
				AND account_nm LIKE CONCAT('%', #{account_nm}, '%')
			</if>
			<if test="item_code!=null and !''.equals(item_code) ">
				AND b.item_code = #{item_code}
			</if>
			<if test="item_nm!=null and !''.equals(item_nm) ">
				AND b.item_nm LIKE CONCAT('%', #{item_nm}, '%')
			</if>		 
		 ) s
		WHERE 	
			1=1
		 <if test="income_date !=null and !''.equals( income_date ) ">
		 	AND income_date BETWEEN LEFT(#{income_date}, 8) AND RIGHT(#{income_date}, 8)
		 </if>
		 <if test=" pang_yn == 'Y'.toString() ">
		 	AND income_date IS NOT NULL
		 </if>
		 <if test=" pang_yn == 'N'.toString() ">
		 	AND income_date IS NULL
		 </if>			
		<if test="insp_status !=null and !''.equals( insp_status ) ">	
			and insp_status = #{insp_status}
		</if>	
			
	</select>
	
	<select id="selectIncome_result2_s" parameterType="SYIncome_resultVo" resultType="SYIncome_resultVo">
	SELECT 
		inspection_seq,
		'수입검사' AS 'routing_nm', 
		(select menge From purchase_order_detail where purchase_order_num = #{purchase_order_num} and purchase_num = #{purchase_num}) AS 'menge',
		a.worker AS 'worker',
		(select inspection_item From income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq) AS 'inspection_item',
		(
		select spec
		from inspection_val_mng 
		where a.product_po = product_po and a.item_code = item_code and a.routing_code = routing_code and a.inspection_seq = inspection_seq limit 1
		) AS spec,
		a.c_dfct_cnt AS 'c_dfct_cnt',
		a.`comment` AS 'comment',
		a.end_time AS 'end_time'
		from inspection_chk_sht a 
		where product_po = CONCAT( #{purchase_order_num}, '-' , #{purchase_num} )
	</select>
	
	<select id="selectIncome_result3_s" parameterType="SYIncome_resultVo" resultType="SYIncome_resultVo">
	select 
		(
		 select inspection_item 
		 From income_inspect_master 
		 where a.item_code = item_code 
		 and a.inspection_seq = inspection_seq
		) as 'inspection_item',
		a.spec,
		a.min_spec,
		a.max_spec,
		a.insp_val,
		a.insp_rst
	from 
		inspection_val_mng a
	where 
		product_po = CONCAT( #{purchase_order_num}, '-' , #{purchase_num} )
		and inspection_seq = #{inspection_seq}
		and sample_type = 'c'
	</select>
	<!-- 1118 -->
	
	<select id="chkProdStrt" parameterType="SYInspVO" resultType="Int">
		select count(*) from product_operation_tbl
		where product_po = #{product_po}
		and routing_code = #{routing_code}
		and ifnull(prod_str_time, '') = ''
	</select>
	
	<select id="selectDfctGrph" parameterType="SYInspVO" resultType="SYInspVO">
		with bb as (

			select t.kind, t.m_year, t.m_month, sum(t.ng_cnt) ng_cnt, sum(t.prod_menge) prod_menge 
			From 
			(
				select 
				a.product_po, a.kind, a.m_year, a.m_month+0 m_month, sum(a.ng_cnt*1) ng_cnt, max(a.prod_menge*1) prod_menge
				from dfct_analysis_view a
				where 1=1 
				and a.m_year = #{m_year}
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code LIKE CONCAT('%', #{item_code}, '%') 
				</if>
				<if test="item_nm !=null and !''.equals( item_nm ) ">
					and a.item_nm LIKE CONCAT('%', #{item_nm}, '%') 
				</if>	
				group by a.kind, a.product_po
			) t
			group by t.kind, t.m_year, t.m_month
			
			union
			
			select t.kind, t.m_year, t.m_month, sum(t.ng_cnt) ng_cnt, sum(t.prod_menge) prod_menge 
			From 
			(
				select 
				a.product_po, '합계' kind, a.m_year, a.m_month+0 m_month, sum(a.ng_cnt*1) ng_cnt, max(a.total_menge*1) prod_menge
				from dfct_analysis_view a
				where 1=1 
				and a.m_year = #{m_year}
				<if test="item_code !=null and !''.equals( item_code ) ">
					and a.item_code LIKE CONCAT('%', #{item_code}, '%') 
				</if>
				<if test="item_nm !=null and !''.equals( item_nm ) ">
					and a.item_nm LIKE CONCAT('%', #{item_nm}, '%') 
				</if>	
				and kind in ('외주', '자주', '최종', '수리')
				group by a.product_po
			) t
			group by t.m_year, t.m_month			
		),
		aa as 
		(
			select aa.m_year, aa.m_month From (
				select #{m_year} m_year, base.m m_month
				from
				(select '01' m union select '02' m union select '03' m union select '04' m union select '05' m union select '06' m 
				union select '07' m union select '08' m union select '09' m union select '10' m union select '11' m union select '12' m) base
			) aa 	
		)
		
		select aa.*,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where 
				bb.kind = '외주'
				and aa.m_year = bb.m_year
				and bb.m_month <![CDATA[ <= ]]> aa.m_month
			),0)
			end
		) kind_1,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where 
				bb.kind = '외주'
				and aa.m_year = bb.m_year
				and bb.m_month = aa.m_month
			),0)
			end
		) c_kind_1,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '자주'
				and aa.m_year = bb.m_year
				and bb.m_month <![CDATA[ <= ]]> aa.m_month
			),0)
			end
		) kind_2,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '자주'
				and aa.m_year = bb.m_year
				and bb.m_month = aa.m_month
			),0)
			end
		) c_kind_2,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '최종'
				and aa.m_year = bb.m_year
				and bb.m_month <![CDATA[ <= ]]> aa.m_month
			),0)
			end
		) kind_4,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '최종'
				and aa.m_year = bb.m_year
				and bb.m_month = aa.m_month
			),0)
			end
		) c_kind_4,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '수리'
				and aa.m_year = bb.m_year
				and bb.m_month <![CDATA[ <= ]]> aa.m_month
			),0)
			end
		) kind_5,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '수리'
				and aa.m_year = bb.m_year
				and bb.m_month = aa.m_month
			),0)
			end
		) c_kind_5,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '합계'
				and aa.m_year = bb.m_year
				and bb.m_month <![CDATA[ <= ]]> aa.m_month
			),0)
			end
		) kind_6,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '합계'
				and aa.m_year = bb.m_year
				and bb.m_month = aa.m_month
			),0)
			end
		) c_kind_6,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '제품품질'
				and aa.m_year = bb.m_year
				and bb.m_month <![CDATA[ <= ]]> aa.m_month
			),0)
			end
		) kind_7,
		(
			case when (DATE_FORMAT(NOW(), '%Y%m')+0 <![CDATA[ < ]]> concat(m_year, m_month)+0)
			then 0
			else 
			ifnull((
				select ROUND(sum(ng_cnt)/sum(prod_menge)*100,3) from bb
				where
				bb.kind = '제품품질'
				and aa.m_year = bb.m_year
				and bb.m_month = aa.m_month
			),0)
			end
		) c_kind_7,
		IFNULL((
			 SELECT 
	   		 IFNULL(goal,0) as goal
	         FROM kpi_dfct_goal_info_tbl
	         WHERE 1 = 1
	         AND CODE = 'A'
	         AND year = aa.m_year 
	         AND LPAD(MONTH,2,0) = aa.m_month

		),0) as goal_1,
		IFNULL((
			 SELECT 
	   		 IFNULL(goal,0) as goal
	         FROM kpi_dfct_goal_info_tbl
	         WHERE 1 = 1
	         AND CODE = 'B'
	         AND year = aa.m_year 
	         AND LPAD(MONTH,2,0) = aa.m_month

		),0) as goal_2,
		IFNULL((
			 SELECT 
	   		 IFNULL(goal,0) as goal
	         FROM kpi_dfct_goal_info_tbl
	         WHERE 1 = 1
	         AND CODE = 'C'
	         AND year = aa.m_year 
	         AND LPAD(MONTH,2,0) = aa.m_month
	         
		),0) as goal_4,
		IFNULL((
			 SELECT 
	   		 IFNULL(goal,0) as goal
	         FROM kpi_dfct_goal_info_tbl
	         WHERE 1 = 1
	         AND CODE = 'D'
	         AND year = aa.m_year 
	         AND LPAD(MONTH,2,0) = aa.m_month

		),0) as goal_5,
		IFNULL((
			 SELECT 
	   		 IFNULL(goal,0) as goal
	         FROM kpi_dfct_goal_info_tbl
	         WHERE 1 = 1
	         AND CODE = 'E'
	         AND year = aa.m_year 
	         AND LPAD(MONTH,2,0) = aa.m_month

		),0) as goal_6,
		IFNULL((
			SELECT 
	   		 IFNULL(goal,0) as goal
	         FROM kpi_dfct_goal_info_tbl
	         WHERE 1 = 1
	         AND CODE = 'F'
	         AND year = aa.m_year 
	         AND LPAD(MONTH,2,0) = aa.m_month	
		),0) as goal_7
		from aa
	</select>
	
	<select id="selectDfctGrphLt" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			t.kind, t.m_year, t.m_month, t.item_code, t.item_nm, sum(t.prod_menge) prod_menge, sum(t.ng_cnt) ng_cnt, sum(t.prfr_menge) prfr_menge
		from
		(	
			select 
			a.kind, a.product_po, a.m_year, a.m_month, a.item_code, a.item_nm, max(a.prod_menge*1) prod_menge, sum(a.ng_cnt*1) ng_cnt, max(a.prod_menge*1) - sum(a.ng_cnt*1) prfr_menge
			from dfct_analysis_view a
			where 1=1
			<if test="m_year !=null and !''.equals( m_year ) ">
				and m_year = #{m_year}+0 
			</if>
			<if test="m_month !=null and !''.equals( m_month ) ">
				and m_month = #{m_month}+0 
			</if>
			<choose>
				<when test="'제품품질'.equals( kind )">			
					and kind = #{kind}
				</when>
				<when test="''.equals(kind)">			
					and kind in ('외주', '자주', '최종', '수리')
				</when>
				<otherwise>			
					and kind = #{kind}
				</otherwise>			
			</choose>
			<if test="item_code !=null and !''.equals( item_code ) ">
				and item_code = #{item_code} 
			</if>
			<if test="item_nm !=null and !''.equals( item_nm ) ">
				and item_nm LIKE CONCAT('%', #{item_nm}, '%') 
			</if>
			group by a.kind, a.product_po
		) t
		group by t.item_code
		order by kind, m_month*1, ng_cnt desc
	
	</select> 
	
	<select id="selectDfctGrphRt" parameterType="SYInspVO" resultType="SYInspVO">
		select 
		kind, m_year, m_month, item_code, item_nm, sum(prod_menge) prod_menge, sum(prod_menge)-sum(ng_cnt) prfr_menge, sum(ng_cnt) ng_cnt
		from dfct_analysis_view
		where 1=1
		<if test="m_year !=null and !''.equals( m_year ) ">
			and m_year = #{m_year} 
		</if>
		<if test="m_month !=null and !''.equals( m_month ) ">
			and m_month = #{m_month} 
		</if>		
		<choose>
			<when test="'제품품질'.equals( kind )">			
				and kind = #{kind}
			</when>
			<when test="''.equals(kind)">			
				and kind in ('외주', '자주', '최종', '수리')
			</when>
			<otherwise>			
				and kind = #{kind}
			</otherwise>			
		</choose>
		<if test="item_code !=null and !''.equals( item_code ) ">
			and item_code = #{item_code} 
		</if>
		<if test="item_nm !=null and !''.equals( item_nm ) ">
			and item_nm LIKE CONCAT('%', #{item_nm}, '%') 
		</if>
		and ng_cnt != 0
		group by item_code, kind, m_month
		order by kind, m_month*1 asc, ng_cnt desc
	</select>
	
	<select id="chkSuipInspIptCnt" parameterType="SYInspVO" resultType="Int">
		select count(*) 
		From inspection_val_mng a where
		product_po = #{product_po}
		and routing_code = #{routing_code}
		and sample_type = 'c'
		and ifnull(insp_val,'') <![CDATA[ <> ]]> ''
		and (select inspection_gubun From income_inspect_master where a.item_code = item_code and a.inspection_seq = inspection_seq) = 'MD1543' 
	</select>
	
	<update id="updateInspMstInfo" parameterType="SYInspVO">
		update inspection_val_mng as a, inspection_master as b
		set a.spec = b.spec,
		a.min_spec = b.min_spec,
		a.max_spec = b.max_spec,
		a.updater = #{updater},
		a.date_updated = current_timestamp()
		where
		a.product_po = #{product_po}
		and a.routing_code = #{routing_code}
		and a.item_code = b.item_code
		and a.routing_code = b.routing_code
		and a.inspection_seq = b.inspection_seq
	</update>
	
	<select id="selectPrtInfo" parameterType="SYPrintVO" resultType="SYPrintVO">
		select
			a.product_po AS 'product_po',
			(SELECT n.mill_sheet_no FROM warehouse_raw_tbl m, warehousing_tbl n WHERE m.product_po = a.product_po AND m.serial_no = n.serial_no limit 1) 'mill_sheet_no',
			(select item_code from product_tbl where a.product_po = product_po) AS 'item_code',
			'' AS 'sn',
			(SELECT prod_menge FROM product_operation_tbl WHERE product_po = a.product_po AND real_seq = 1) AS 'prod_menge',
			(a.prod_menge) AS 'f_prod_menge',
			(a.prod_fail_menge) AS 'prod_fail_menge',
			( SELECT m.customer_nm FROM order_manager_tbl m, product_tbl n WHERE m.order_num = n.order_num and m.item_code = n.item_code AND a.product_po = n.product_po) 'customer_nm',
			'' AS 'site',
			(select comment From inspection_chk_sht where a.product_po = product_po and a.routing_code = routing_code limit 1) comment,
			(select member_nm From inspection_chk_sht where a.product_po = product_po and a.routing_code = routing_code limit 1) member_nm,
			( SELECT DATE_FORMAT(prod_end_time, '%Y-%m-%d') FROM product_operation_tbl WHERE product_po = a.product_po AND real_seq = 1) 's_prod_end_time',
			( SELECT DATE_FORMAT(prod_end_time, '%Y-%m-%d') FROM product_operation_tbl WHERE product_po = a.product_po AND a.routing_code = routing_code) 'e_prod_end_time',
			(DATE_FORMAT(a.prod_end_time, '%Y-%m-%d')) 'prod_end_time'
		from 
		product_operation_tbl a
		where
		a.product_po = #{product_po}
		and a.routing_code = #{routing_code}		
	</select>

	<select id="selectDfctGrphMd" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			a.kind, a.m_year, a.m_month+0 m_month, a.item_code, a.item_nm, 
			sum(a.prod_menge*1) prod_menge, sum(a.ng_cnt*1) ng_cnt, sum(a.prod_menge*1)-sum(a.ng_cnt*1) prfr_menge,
			ROUND(sum(a.ng_cnt*1)/sum(a.prod_menge*1)*100,3) dfct_rate
		from 
		(
		select 
		a.kind, a.product_po, a.m_year, a.m_month, a.item_code, a.item_nm, max(a.prod_menge*1) prod_menge, sum(a.ng_cnt*1) ng_cnt
		from dfct_analysis_view a
		where
		a.m_year = #{m_year}
		<if test="item_code !=null and !''.equals( item_code ) ">
			and item_code = #{item_code} 
		</if>
		<if test="item_nm !=null and !''.equals( item_nm ) ">
			and item_nm LIKE CONCAT('%', #{item_nm}, '%') 
		</if>
		group by a.kind, a.product_po
		) a
		group by kind, m_year, m_month+0
		
		
		union
		
		select 
			a.kind, a.m_year, a.m_month+0 m_month, a.item_code, a.item_nm, 
			sum(a.prod_menge*1) prod_menge, sum(a.ng_cnt*1) ng_cnt, sum(a.prod_menge*1)-sum(a.ng_cnt*1) prfr_menge,
			ROUND(sum(a.ng_cnt*1)/sum(a.prod_menge*1)*100,3) dfct_rate
		from 
		(
		select 
		'합계' kind, a.product_po, a.m_year, a.m_month, a.item_code, a.item_nm, max(a.total_menge*1) prod_menge, sum(a.ng_cnt*1) ng_cnt
		from dfct_analysis_view a
		where
		a.m_year = #{m_year}
		<if test="item_code !=null and !''.equals( item_code ) ">
			and item_code = #{item_code} 
		</if>
		<if test="item_nm !=null and !''.equals( item_nm ) ">
			and item_nm LIKE CONCAT('%', #{item_nm}, '%') 
		</if>
		and kind in ('외주', '자주', '최종', '수리')
		group by a.product_po
		) a
		group by m_year, m_month+0

	</select>
	
	<update id="initProdSrtInfo" parameterType="SYInspVO">
		update 
			product_tbl
		set 
			product_status_info = 'n',
			routing_code = 
				(select routing_code From product_operation_tbl where product_po = #{product_po} and real_seq in
				(select real_seq*1-1 From product_operation_tbl where product_po = #{product_po} and routing_code = #{routing_code})),
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
	</update>
	
	<update id="initProdOprtSrtInfoBtn" parameterType="SYInspVO">
		update 
			product_operation_tbl
		set 
			prod_str_time = null,
			status = 'n',
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			product_po = #{product_po}
			and routing_code = #{routing_code}
	</update>
	
	<delete id="initInspValInfo" parameterType="SYInspVO">
		DELETE FROM inspection_val_mng
		WHERE 
			product_po = #{product_po}
			and routing_code = #{routing_code}
	</delete>
	
	<delete id="initInspChkInfo" parameterType="SYInspVO">
		DELETE FROM inspection_chk_sht
		WHERE 
			product_po = #{product_po}
			and routing_code = #{routing_code}
	</delete>
	
	<select id="export_fnsh_insp" parameterType="SYInspVO" resultType="SYInspVO">
		select 
			a.product_po, a.item_code, a.routing_code, a.inspection_seq, a.val_seq, a.insp_case, a.insp_val, a.insp_rst, 
			b.inspection_gubun, b.spec, ifnull(b.min_spec, '') min_spec, ifnull(b.max_spec, '') max_spec,
			b.inspection_item,
			(
				select count(*) from inspection_val_mng c where 
				ifnull(#{product_po}, '') = c.product_po
				and a.item_code = c.item_code
				and a.routing_code = c.routing_code
				and a.inspection_seq = c.inspection_seq
				and a.val_seq = c.val_seq
				and c.insp_rst = 'NG'
				and a.sample_type = c.sample_type
			) insp_ng_cnt,
			(
			case 
				when 
				a.sample_type = 'a'
				then '초물'			
			when 
				a.sample_type = 'b'
				then '중물'			
			when 
				a.sample_type = 'c'
				then '종물'			
			end
			) sample_type
		from 
			inspection_val_mng a, inspection_master b
		where 
			a.item_code = b.item_code and a.routing_code = b.routing_code and a.inspection_seq = b.inspection_seq
			
			AND b.use_yn = 'Y'
			and a.product_po = #{product_po}
			and a.routing_code = #{routing_code}
			and a.insp_rst <![CDATA[ <> ]]> ''
			and a.sample_type = 'c'
		order by a.sample_type, a.inspection_seq, a.val_seq
	</select>
	
	
	<select id="selcSuipInspOrd" parameterType="SYInspVO" resultType="SYInspVO">
		SELECT 
			s.*,
			(
			SELECT insp_case
			FROM inspection_val_mng
			WHERE product_po = CONCAT(purchase_order_num,'-',purchase_num) AND sample_type = 'c'
			LIMIT 1
			) insp_case
		FROM
		(
		SELECT
		c.purchase_date, a.item_spec, a.item_type_code, a.item_type_nm, a.unit_price,
		c.purchase_order_num,a.purchase_num,a.item_code,a.item_nm,c.account_code,
		c.account_nm, a.menge, a.in_menge,
		(SELECT income_date FROM income_result WHERE a.purchase_order_num =purchase_order_num AND a.purchase_num =purchase_num AND del_yn ='N') AS income_date, 
		CASE WHEN
			(SELECT pass_yn FROM income_result WHERE a.purchase_order_num =purchase_order_num AND a.purchase_num =purchase_num AND del_yn ='N') IS NULL 
		THEN 
			'검사전' 
		ELSE 
			'검사완료' 
		END AS pass_yn,
		(
		CASE WHEN 
			(SELECT COUNT(*) FROM income_inspect_master WHERE item_code = a.item_code AND use_yn = 'Y') = 0 
		THEN 
			'품질검사항목없음' 
		WHEN
		(SELECT purchase_status FROM purchase_order_detail WHERE purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num) = 'R' 
		THEN 
			'검사전' 
		ELSE 
			'검사진행중' 
		END
		) insp_status,
		(
		CASE WHEN 
			(SELECT COUNT(*) FROM routing_master WHERE item_code = a.item_code AND use_yn = 'Y') = 0 
		THEN 
			'공정마스터정보없음' 
		WHEN
			(select count(*) From purchase_suip_map where purchase_order_num = a.purchase_order_num AND purchase_num = a.purchase_num) > 0
		THEN 
			'확정' 
		ELSE 
			'미확정' 
		END
		) suip_status
		FROM 
			purchase_order_detail a,material_tbl b,purchase_order_master c
		WHERE 1=1 
			AND a.item_code =b.item_code 
			AND a.purchase_order_num = c.purchase_order_num 
			AND b.receiving_inspection_yn ='Y' 
			AND (a.purchase_status ='R' OR a.purchase_status ='I') 
			AND a.del_yn ='N'
			and b.receiving_inspection_yn = 'Y'
			<if test="account_nm!=null and !''.equals(account_nm) ">
				AND c.account_nm LIKE CONCAT('%', #{account_nm}, '%')
			</if>
			<if test="item_code!=null and !''.equals(item_code) ">
				AND a.item_code = #{item_code}
			</if>
			<if test="item_nm!=null and !''.equals(item_nm) ">
				AND a.item_nm LIKE CONCAT('%', #{item_nm}, '%')
			</if>
		) s
		WHERE
		1=1
		<if test="purchase_date !=null and !''.equals(purchase_date) ">
			AND purchase_date BETWEEN LEFT(#{purchase_date}, 8) AND RIGHT(#{purchase_date}, 8)
		</if>
		<if test="insp_status !=null and !''.equals(insp_status) ">
			and insp_status = #{insp_status}
		</if>
		<if test="suip_status !=null and !''.equals(suip_status) ">
			and suip_status = #{suip_status}
		</if>
	</select>
	
	<insert id="confirmSuipInsp" parameterType="SYInspVO">
 		INSERT INTO purchase_suip_map (
 			purchase_order_num, purchase_num, product_po, date_created, date_updated, creator, updater
		)
		VALUES 
		(
			#{purchase_order_num}, #{purchase_num}, #{product_po}, current_timestamp(), current_timestamp(), #{creator}, #{updater}
		)	
	</insert>
	
	<select id="selectInspOrderNum" resultType="String">
		
		SELECT fn_insp_order_num()
	
	</select>
	
	<update id="savePrcInsp" parameterType="SYInspVO">
		update 
			purchase_order_detail
		set
		<if test="purchase_status !=null and !''.equals( purchase_status ) ">
			purchase_status = #{purchase_status},
		</if>
		<if test="prod_menge !=null and !''.equals( prod_menge ) ">
			pass_menge = 
				#{prod_menge} - ifnull((select sum(c_dfct_cnt) From inspection_chk_sht where product_po = #{product_po}), 0),
		</if>	
			date_updated = current_timestamp(),
			updater = #{updater}
		where
			(purchase_order_num, purchase_num) in (select purchase_order_num, purchase_num from purchase_suip_map where product_po = #{product_po})
	</update>
	
	<select id="suipStrtRtngChk" parameterType="SYInspVO" resultType="int">
		select
		if(
			(
			select routing_code from product_operation_tbl c
			where
			product_po = #{product_po}
			<!-- and (right(c.routing_code, 2) = '-1' or left(c.routing_code, 1) = 'Z' or left(c.routing_code, 1) = 'Q' or left(c.routing_code, 1) = 'F') -->
			order by real_seq*1 limit 1
			) = #{routing_code}
		, 1, 0) 
	</select>
	
	<select id="getSuipMengeInfo" parameterType="SYInspVO" resultType="String">
		select menge 
		from purchase_order_detail
		where
		(purchase_order_num, purchase_num) in (select purchase_order_num, purchase_num from purchase_suip_map where product_po = #{product_po})
	</select>
</mapper>